import{u as bs,a as Ps,r as _e,T as Os,j as y,m as Be}from"./index-DTE9duUF.js";/*! @azure/msal-common v15.13.0 2025-09-24 */const m={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},ue={SUCCESS:200,SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR:400,CLIENT_ERROR_RANGE_START:400,BAD_REQUEST:400,UNAUTHORIZED:401,NOT_FOUND:404,REQUEST_TIMEOUT:408,GONE:410,TOO_MANY_REQUESTS:429,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR:500,SERVER_ERROR_RANGE_START:500,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,SERVER_ERROR_RANGE_END:599,MULTI_SIDED_ERROR:600},Ae={GET:"GET",POST:"POST"},De=[m.OPENID_SCOPE,m.PROFILE_SCOPE,m.OFFLINE_ACCESS_SCOPE],Do=[...De,m.EMAIL_SCOPE],B={CONTENT_TYPE:"Content-Type",CONTENT_LENGTH:"Content-Length",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},Lo={ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},ge={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},at={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},H={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",NO_SESSION:"no_session"},Sn={CODE:"code",IDTOKEN_TOKEN_REFRESHTOKEN:"id_token token refresh_token"},Lt={QUERY:"query",FRAGMENT:"fragment"},Ns={QUERY:"query"},Ar={AUTHORIZATION_CODE_GRANT:"authorization_code",REFRESH_TOKEN_GRANT:"refresh_token"},ct={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",GENERIC_ACCOUNT_TYPE:"Generic"},Xe={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},L={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},_n="appmetadata",Ms="client_info",Ct="1",yt={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},$={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},D={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},S={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},$e={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},Ho={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},Re={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},nn={CONFIGURED_NO_AUTO_DETECTION:"2",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},Te={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},xs={Pop:"pop"},Ir=300;/*! @azure/msal-common v15.13.0 2025-09-24 */const Tt="unexpected_error",Us="post_request_failed";/*! @azure/msal-common v15.13.0 2025-09-24 */const Fo={[Tt]:"Unexpected error in authentication.",[Us]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class R extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,R.prototype),this.errorCode=e||m.EMPTY_STRING,this.errorMessage=t||m.EMPTY_STRING,this.subError=n||m.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function hn(r,e){return new R(r,e?`${Fo[r]} ${e}`:Fo[r])}/*! @azure/msal-common v15.13.0 2025-09-24 */const Rn="client_info_decoding_error",wr="client_info_empty_error",bn="token_parsing_error",Er="null_or_empty_token",ae="endpoints_resolution_error",kr="network_error",vr="openid_config_error",Sr="hash_not_deserialized",xe="invalid_state",_r="state_mismatch",dn="state_not_found",Rr="nonce_mismatch",Pn="auth_time_not_found",br="max_age_transpired",Ds="multiple_matching_tokens",Ls="multiple_matching_accounts",Pr="multiple_matching_appMetadata",Or="request_cannot_be_made",Nr="cannot_remove_empty_scope",Mr="cannot_append_scopeset",un="empty_input_scopeset",Hs="device_code_polling_cancelled",Fs="device_code_expired",Ks="device_code_unknown_error",On="no_account_in_silent_request",xr="invalid_cache_record",Nn="invalid_cache_environment",gn="no_account_found",mn="no_crypto_object",Bs="unexpected_credential_type",Gs="invalid_assertion",zs="invalid_client_credential",me="token_refresh_required",qs="user_timeout_reached",Ur="token_claims_cnf_required_for_signedjwt",Dr="authorization_code_missing_from_server_response",Lr="binding_key_not_removed",Hr="end_session_endpoint_not_supported",Mn="key_id_missing",js="no_network_connectivity",$s="user_canceled",Vs="missing_tenant_id_error",E="method_not_implemented",Qs="nested_app_auth_bridge_disabled";/*! @azure/msal-common v15.13.0 2025-09-24 */const Ko={[Rn]:"The client info could not be parsed/decoded correctly",[wr]:"The client info was empty",[bn]:"Token cannot be parsed",[Er]:"The token is null or empty",[ae]:"Endpoints cannot be resolved",[kr]:"Network request failed",[vr]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Sr]:"The hash parameters could not be deserialized",[xe]:"State was not the expected format",[_r]:"State mismatch error",[dn]:"State not found",[Rr]:"Nonce mismatch error",[Pn]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[br]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[Ds]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[Ls]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Pr]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[Or]:"Token request cannot be made without authorization code or refresh token.",[Nr]:"Cannot remove null or empty scope from ScopeSet",[Mr]:"Cannot append ScopeSet",[un]:"Empty input ScopeSet cannot be processed",[Hs]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Fs]:"Device code is expired.",[Ks]:"Device code stopped polling for unknown reasons.",[On]:"Please pass an account object, silent flow is not supported without account information",[xr]:"Cache record object was null or undefined.",[Nn]:"Invalid environment when attempting to create cache entry",[gn]:"No account found in cache for given key.",[mn]:"No crypto object detected.",[Bs]:"Unexpected credential type.",[Gs]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[zs]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[me]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[qs]:"User defined timeout for device code polling reached",[Ur]:"Cannot generate a POP jwt if the token_claims are not populated",[Dr]:"Server response does not contain an authorization code to proceed",[Lr]:"Could not remove the credential's binding key from storage.",[Hr]:"The provided authority does not support logout",[Mn]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[js]:"No network connectivity. Check your internet connection.",[$s]:"User cancelled the flow.",[Vs]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[E]:"This method has not been implemented",[Qs]:"The nested app auth bridge is disabled"};class xn extends R{constructor(e,t){super(e,t?`${Ko[e]}: ${t}`:Ko[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,xn.prototype)}}function p(r,e){return new xn(r,e)}/*! @azure/msal-common v15.13.0 2025-09-24 */const At={createNewGuid:()=>{throw p(E)},base64Decode:()=>{throw p(E)},base64Encode:()=>{throw p(E)},base64UrlEncode:()=>{throw p(E)},encodeKid:()=>{throw p(E)},async getPublicKeyThumbprint(){throw p(E)},async removeTokenBindingKey(){throw p(E)},async clearKeystore(){throw p(E)},async signJwt(){throw p(E)},async hashString(){throw p(E)}};/*! @azure/msal-common v15.13.0 2025-09-24 */var P;(function(r){r[r.Error=0]="Error",r[r.Warning=1]="Warning",r[r.Info=2]="Info",r[r.Verbose=3]="Verbose",r[r.Trace=4]="Trace"})(P||(P={}));class Ce{constructor(e,t,n){this.level=P.Info;const o=()=>{},i=e||Ce.createDefaultLoggerOptions();this.localCallback=i.loggerCallback||o,this.piiLoggingEnabled=i.piiLoggingEnabled||!1,this.level=typeof i.logLevel=="number"?i.logLevel:P.Info,this.correlationId=i.correlationId||m.EMPTY_STRING,this.packageName=t||m.EMPTY_STRING,this.packageVersion=n||m.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info}}clone(e,t,n){return new Ce({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const i=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${P[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,i,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!1,correlationId:t||m.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:P.Error,containsPii:!0,correlationId:t||m.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!1,correlationId:t||m.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:P.Warning,containsPii:!0,correlationId:t||m.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!1,correlationId:t||m.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:P.Info,containsPii:!0,correlationId:t||m.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!1,correlationId:t||m.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:P.Verbose,containsPii:!0,correlationId:t||m.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!1,correlationId:t||m.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:P.Trace,containsPii:!0,correlationId:t||m.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v15.13.0 2025-09-24 */const Fr="@azure/msal-common",Un="15.13.0";/*! @azure/msal-common v15.13.0 2025-09-24 */const Dn={None:"none"};/*! @azure/msal-common v15.13.0 2025-09-24 */const Kr="redirect_uri_empty",Ws="claims_request_parsing_error",Br="authority_uri_insecure",qe="url_parse_error",Gr="empty_url_error",zr="empty_input_scopes_error",Ln="invalid_claims",qr="token_request_empty",jr="logout_request_empty",Ys="invalid_code_challenge_method",Hn="pkce_params_missing",Fn="invalid_cloud_discovery_metadata",$r="invalid_authority_metadata",Vr="untrusted_authority",Ht="missing_ssh_jwk",Qr="missing_ssh_kid",Js="missing_nonce_authentication_header",Xs="invalid_authentication_header",Wr="cannot_set_OIDCOptions",Yr="cannot_allow_platform_broker",Jr="authority_mismatch",Xr="invalid_request_method_for_EAR",Zr="invalid_authorize_post_body_parameters";/*! @azure/msal-common v15.13.0 2025-09-24 */const Zs={[Kr]:"A redirect URI is required for all calls, and none has been set.",[Ws]:"Could not parse the given claims request object.",[Br]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[qe]:"URL could not be parsed into appropriate segments.",[Gr]:"URL was empty or null.",[zr]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Ln]:"Given claims parameter must be a stringified JSON object.",[qr]:"Token request was empty and not found in cache.",[jr]:"The logout request was null or undefined.",[Ys]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Hn]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[Fn]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[$r]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Vr]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Ht]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Qr]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Js]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Xs]:"Invalid authentication header provided",[Wr]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Yr]:"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.",[Jr]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.",[Zr]:"Invalid authorize post body parameters provided. If you are using authorizePostBodyParameters, the request method must be POST. Please check the request method and parameters.",[Xr]:"Invalid request method for EAR protocol mode. The request method cannot be GET when using EAR protocol mode. Please change the request method to POST."};class Kn extends R{constructor(e){super(e,Zs[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Kn.prototype)}}function b(r){return new Kn(r)}/*! @azure/msal-common v15.13.0 2025-09-24 */class V{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=i=>decodeURIComponent(i.replace(/\+/g," "));return n.forEach(i=>{if(i.trim()){const[s,a]=i.split(/=(.+)/g,2);s&&a&&(t[o(s)]=o(a))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class M{constructor(e){const t=e?V.trimArrayEntries([...e]):[],n=t?V.removeEmptyStringsFromArray(t):[];if(!n||!n.length)throw b(zr);this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||m.EMPTY_STRING).split(" ");return new M(n)}static createSearchScopes(e){const t=e&&e.length>0?e:[...De],n=new M(t);return n.containsOnlyOIDCScopes()?n.removeScope(m.OFFLINE_ACCESS_SCOPE):n.removeOIDCScopes(),n}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new M(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return Do.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw p(Mr)}}removeScope(e){if(!e)throw p(Nr);this.scopes.delete(e.trim())}removeOIDCScopes(){Do.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw p(un);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw p(un);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):m.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v15.13.0 2025-09-24 */function Bo(r,e){return!!r&&!!e&&r===e.split(".")[1]}function Bn(r,e,t,n){if(n){const{oid:o,sub:i,tid:s,name:a,tfp:c,acr:l,preferred_username:d,upn:u,login_hint:f}=n,T=s||c||l||"";return{tenantId:T,localAccountId:o||i||"",name:a,username:d||u||"",loginHint:f,isHomeTenant:Bo(T,r)}}else return{tenantId:t,localAccountId:e,username:"",isHomeTenant:Bo(t,r)}}function Gn(r,e,t,n){let o=r;if(e){const{isHomeTenant:i,...s}=e;o={...r,...s}}if(t){const{isHomeTenant:i,...s}=Bn(r.homeAccountId,r.localAccountId,r.tenantId,t);return o={...o,...s,idTokenClaims:t,idToken:n},o}return o}/*! @azure/msal-common v15.13.0 2025-09-24 */function Le(r,e){const t=ea(r);try{const n=e(t);return JSON.parse(n)}catch{throw p(bn)}}function ea(r){if(!r)throw p(Er);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(r);if(!t||t.length<4)throw p(bn);return t[2]}function ei(r,e){if(e===0||Date.now()-3e5>r+e)throw p(br)}/*! @azure/msal-common v15.13.0 2025-09-24 */function Go(r){if(!r)return r;let e=r.toLowerCase();return V.endsWith(e,"?")?e=e.slice(0,-1):V.endsWith(e,"?/")&&(e=e.slice(0,-2)),V.endsWith(e,"/")||(e+="/"),e}function ti(r){return r.startsWith("#/")?r.substring(2):r.startsWith("#")||r.startsWith("?")?r.substring(1):r}function It(r){if(!r||r.indexOf("=")<0)return null;try{const e=ti(r),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.ear_jwe||t.error||t.error_description||t.state)return t}catch{throw p(Sr)}return null}function Ze(r,e=!0,t){const n=new Array;return r.forEach((o,i)=>{!e&&t&&i in t?n.push(`${i}=${o}`):n.push(`${i}=${encodeURIComponent(o)}`)}),n.join("&")}function zo(r){if(!r)return r;const e=r.split("#")[0];try{const t=new URL(e),n=t.origin+t.pathname+t.search;return Go(n)}catch{return Go(e)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class v{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw b(Gr);e.includes("#")||(this._urlString=v.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return V.endsWith(t,"?")?t=t.slice(0,-1):V.endsWith(t,"?/")&&(t=t.slice(0,-2)),V.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw b(qe)}if(!e.HostNameAndPort||!e.PathSegments)throw b(qe);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw b(Br)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return v.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===ge.COMMON||n[0]===ge.ORGANIZATIONS)&&(n[0]=e),v.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw b(qe);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(i=>i&&i.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw b(qe);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===m.FORWARD_SLASH){const o=new v(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new v(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!It(e)}}/*! @azure/msal-common v15.13.0 2025-09-24 */const ni={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},qo=ni.endpointMetadata,zn=ni.instanceDiscoveryMetadata,oi=new Set;zn.metadata.forEach(r=>{r.aliases.forEach(e=>{oi.add(e)})});function ta(r,e){let t;const n=r.canonicalAuthority;if(n){const o=new v(n).getUrlComponents().HostNameAndPort;t=jo(o,r.cloudDiscoveryMetadata?.metadata,$.CONFIG,e)||jo(o,zn.metadata,$.HARDCODED_VALUES,e)||r.knownAuthorities}return t||[]}function jo(r,e,t,n){if(n?.trace(`getAliasesFromMetadata called with source: ${t}`),r&&e){const o=wt(e,r);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function na(r){return wt(zn.metadata,r)}function wt(r,e){for(let t=0;t<r.length;t++){const n=r[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v15.13.0 2025-09-24 */const Et="cache_quota_exceeded",qn="cache_error_unknown";/*! @azure/msal-common v15.13.0 2025-09-24 */const on={[Et]:"Exceeded cache storage capacity.",[qn]:"Unexpected error occurred when using cache storage."};class Oe extends R{constructor(e,t){const n=t||(on[e]?on[e]:on[qn]);super(`${e}: ${n}`),Object.setPrototypeOf(this,Oe.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}function pn(r){return r instanceof Error?r.name==="QuotaExceededError"||r.name==="NS_ERROR_DOM_QUOTA_REACHED"||r.message.includes("exceeded the quota")?new Oe(Et):new Oe(r.name,r.message):new Oe(qn)}/*! @azure/msal-common v15.13.0 2025-09-24 */class fn{constructor(e,t,n,o,i){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(Fr,Un),this.staticAuthorityOptions=i,this.performanceClient=o}getAllAccounts(e,t){return this.buildTenantProfiles(this.getAccountsFilteredBy(e,t),t,e)}getAccountInfoFilteredBy(e,t){if(Object.keys(e).length===0||Object.values(e).every(o=>!o))return this.commonLogger.warning("getAccountInfoFilteredBy: Account filter is empty or invalid, returning null"),null;const n=this.getAllAccounts(e,t);return n.length>1?n.sort(i=>i.idTokenClaims?-1:1)[0]:n.length===1?n[0]:null}getBaseAccountInfo(e,t){const n=this.getAccountsFilteredBy(e,t);return n.length>0?n[0].getAccountInfo():null}buildTenantProfiles(e,t,n){return e.flatMap(o=>this.getTenantProfilesFromAccountEntity(o,t,n?.tenantId,n))}getTenantedAccountInfoByFilter(e,t,n,o,i){let s=null,a;if(i&&!this.tenantProfileMatchesFilter(n,i))return null;const c=this.getIdToken(e,o,t,n.tenantId);return c&&(a=Le(c.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(a,i))?null:(s=Gn(e,n,a,c?.secret),s)}getTenantProfilesFromAccountEntity(e,t,n,o){const i=e.getAccountInfo();let s=i.tenantProfiles||new Map;const a=this.getTokenKeys();if(n){const l=s.get(n);if(l)s=new Map([[n,l]]);else return[]}const c=[];return s.forEach(l=>{const d=this.getTenantedAccountInfoByFilter(i,a,l,t,o);d&&c.push(d)}),c}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t,n){if(!e)throw p(xr);try{e.account&&await this.setAccount(e.account,t),e.idToken&&n?.idToken!==!1&&await this.setIdTokenCredential(e.idToken,t),e.accessToken&&n?.accessToken!==!1&&await this.saveAccessToken(e.accessToken,t),e.refreshToken&&n?.refreshToken!==!1&&await this.setRefreshTokenCredential(e.refreshToken,t),e.appMetadata&&this.setAppMetadata(e.appMetadata,t)}catch(o){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),o instanceof R?o:pn(o)}}async saveAccessToken(e,t){const n={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},o=this.getTokenKeys(),i=M.fromString(e.target);o.accessToken.forEach(s=>{if(!this.accessTokenKeyMatchesFilter(s,n,!1))return;const a=this.getAccessTokenCredential(s,t);a&&this.credentialMatchesFilter(a,n)&&M.fromString(a.target).intersectingScopeSets(i)&&this.removeAccessToken(s,t)}),await this.setAccessTokenCredential(e,t)}getAccountsFilteredBy(e,t){const n=this.getAccountKeys(),o=[];return n.forEach(i=>{const s=this.getAccount(i,t);if(!s||e.homeAccountId&&!this.matchHomeAccountId(s,e.homeAccountId)||e.username&&!this.matchUsername(s.username,e.username)||e.environment&&!this.matchEnvironment(s,e.environment)||e.realm&&!this.matchRealm(s,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(s,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(s,e.authorityType))return;const a={localAccountId:e?.localAccountId,name:e?.name},c=s.tenantProfiles?.filter(l=>this.tenantProfileMatchesFilter(l,a));c&&c.length===0||o.push(s)}),o}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===L.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===S.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach(o=>{if(!this.isAppMetadata(o))return;const i=this.getAppMetadata(o);i&&(e.environment&&!this.matchEnvironment(i,e.environment)||e.clientId&&!this.matchClientId(i,e.clientId)||(n[o]=i))}),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const i=this.getAuthorityMetadata(o);i&&i.aliases.indexOf(e)!==-1&&(n=i)}),n}removeAllAccounts(e){this.getAllAccounts({},e).forEach(n=>{this.removeAccount(n,e)})}removeAccount(e,t){this.removeAccountContext(e,t);const n=this.getAccountKeys(),o=i=>i.includes(e.homeAccountId)&&i.includes(e.environment);n.filter(o).forEach(i=>{this.removeItem(i,t),this.performanceClient.incrementFields({accountsRemoved:1},t)})}removeAccountContext(e,t){const n=this.getTokenKeys(),o=i=>i.includes(e.homeAccountId)&&i.includes(e.environment);n.idToken.filter(o).forEach(i=>{this.removeIdToken(i,t)}),n.accessToken.filter(o).forEach(i=>{this.removeAccessToken(i,t)}),n.refreshToken.filter(o).forEach(i=>{this.removeRefreshToken(i,t)})}removeAccessToken(e,t){const n=this.getAccessTokenCredential(e,t);if(this.removeItem(e,t),this.performanceClient.incrementFields({accessTokensRemoved:1},t),!n||n.credentialType.toLowerCase()!==L.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()||n.tokenType!==S.POP)return;const o=n.keyId;o&&this.cryptoImpl.removeTokenBindingKey(o).catch(()=>{this.commonLogger.error(`Failed to remove token binding key ${o}`,t),this.performanceClient?.incrementFields({removeTokenBindingKeyFailure:1},t)})}removeAppMetadata(e){return this.getKeys().forEach(n=>{this.isAppMetadata(n)&&this.removeItem(n,e)}),!0}getIdToken(e,t,n,o,i){this.commonLogger.trace("CacheManager - getIdToken called");const s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:L.ID_TOKEN,clientId:this.clientId,realm:o},a=this.getIdTokensByFilter(s,t,n),c=a.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let l=a;if(!o){const d=new Map;a.forEach((f,T)=>{f.realm===e.tenantId&&d.set(T,f)});const u=d.size;if(u<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(u===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),d.values().next().value;l=d}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),l.forEach((d,u)=>{this.removeIdToken(u,t)}),i&&t&&i.addFields({multiMatchedID:a.size},t),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t,n){const o=n&&n.idToken||this.getTokenKeys().idToken,i=new Map;return o.forEach(s=>{if(!this.idTokenKeyMatchesFilter(s,{clientId:this.clientId,...e}))return;const a=this.getIdTokenCredential(s,t);a&&this.credentialMatchesFilter(a,e)&&i.set(s,a)}),i}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e,t){this.removeItem(e,t)}removeRefreshToken(e,t){this.removeItem(e,t)}getAccessToken(e,t,n,o){const i=t.correlationId;this.commonLogger.trace("CacheManager - getAccessToken called",i);const s=M.createSearchScopes(t.scopes),a=t.authenticationScheme||S.BEARER,c=a.toLowerCase()!==S.BEARER.toLowerCase()?L.ACCESS_TOKEN_WITH_AUTH_SCHEME:L.ACCESS_TOKEN,l={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:o||e.tenantId,target:s,tokenType:a,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},d=n&&n.accessToken||this.getTokenKeys().accessToken,u=[];d.forEach(T=>{if(this.accessTokenKeyMatchesFilter(T,l,!0)){const k=this.getAccessTokenCredential(T,i);k&&this.credentialMatchesFilter(k,l)&&u.push(k)}});const f=u.length;return f<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found",i),null):f>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them",i),u.forEach(T=>{this.removeAccessToken(this.generateCredentialKey(T),i)}),this.performanceClient.addFields({multiMatchedAT:u.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token",i),u[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const i=t.target.asArray();for(let s=0;s<i.length;s++){if(n&&!o.includes(i[s].toLowerCase()))return!1;if(!n&&o.includes(i[s].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e,t){const n=this.getTokenKeys(),o=[];return n.accessToken.forEach(i=>{if(!this.accessTokenKeyMatchesFilter(i,e,!0))return;const s=this.getAccessTokenCredential(i,t);s&&this.credentialMatchesFilter(s,e)&&o.push(s)}),o}getRefreshToken(e,t,n,o,i){this.commonLogger.trace("CacheManager - getRefreshToken called");const s=t?Ct:void 0,a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:L.REFRESH_TOKEN,clientId:this.clientId,familyId:s},c=o&&o.refreshToken||this.getTokenKeys().refreshToken,l=[];c.forEach(u=>{if(this.refreshTokenKeyMatchesFilter(u,a)){const f=this.getRefreshTokenCredential(u,n);f&&this.credentialMatchesFilter(f,a)&&l.push(f)}});const d=l.length;return d<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(d>1&&i&&n&&i.addFields({multiMatchedRT:d},n),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),l[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(s=>n[s]),i=o.length;if(i<1)return null;if(i>1)throw p(Pr);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===Ct)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return t.toLowerCase()===e.name?.toLowerCase()}matchUsername(e,t){return!!(e&&typeof e=="string"&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=ta(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return e.realm?.toLowerCase()===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==L.ACCESS_TOKEN&&e.credentialType!==L.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:M.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(_n)!==-1}isAuthorityMetadata(e){return e.indexOf(yt.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${yt.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class oa extends fn{async setAccount(){throw p(E)}getAccount(){throw p(E)}async setIdTokenCredential(){throw p(E)}getIdTokenCredential(){throw p(E)}async setAccessTokenCredential(){throw p(E)}getAccessTokenCredential(){throw p(E)}async setRefreshTokenCredential(){throw p(E)}getRefreshTokenCredential(){throw p(E)}setAppMetadata(){throw p(E)}getAppMetadata(){throw p(E)}setServerTelemetry(){throw p(E)}getServerTelemetry(){throw p(E)}setAuthorityMetadata(){throw p(E)}getAuthorityMetadata(){throw p(E)}getAuthorityMetadataKeys(){throw p(E)}setThrottlingCache(){throw p(E)}getThrottlingCache(){throw p(E)}removeItem(){throw p(E)}getKeys(){throw p(E)}getAccountKeys(){throw p(E)}getTokenKeys(){throw p(E)}generateCredentialKey(){throw p(E)}generateAccountKey(){throw p(E)}}/*! @azure/msal-common v15.13.0 2025-09-24 */const z={AAD:"AAD",OIDC:"OIDC",EAR:"EAR"};/*! @azure/msal-common v15.13.0 2025-09-24 */const h={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",InitializeCache:"initializeCache",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",GetAuthCodeUrl:"getAuthCodeUrl",GetStandardParams:"getStandardParams",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",HandleResponseEar:"handleResponseEar",HandleResponsePlatformBroker:"handleResponsePlatformBroker",HandleResponseCode:"handleResponseCode",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",ImportExistingCache:"importExistingCache",SetUserData:"setUserData",LocalStorageUpdated:"localStorageUpdated",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues",GenerateHKDF:"generateHKDF",GenerateBaseKey:"generateBaseKey",Base64Decode:"base64Decode",UrlEncodeArr:"urlEncodeArr",Encrypt:"encrypt",Decrypt:"decrypt",GenerateEarKey:"generateEarKey",DecryptEarResponse:"decryptEarResponse"},ra={InProgress:1};/*! @azure/msal-common v15.13.0 2025-09-24 */class $o{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class ri{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:ra.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new $o}}startPerformanceMeasurement(){return new $o}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-common v15.13.0 2025-09-24 */const ii={tokenRenewalOffsetSeconds:Ir,preventCorsPreflight:!1},ia={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:P.Info,correlationId:m.EMPTY_STRING},sa={claimsBasedCachingEnabled:!1},aa={async sendGetRequestAsync(){throw p(E)},async sendPostRequestAsync(){throw p(E)}},ca={sku:m.SKU,version:Un,cpu:m.EMPTY_STRING,os:m.EMPTY_STRING},la={clientSecret:m.EMPTY_STRING,clientAssertion:void 0},ha={azureCloudInstance:Dn.None,tenant:`${m.DEFAULT_COMMON_TENANT}`},da={application:{appName:"",appVersion:""}};function ua({authOptions:r,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:d,persistencePlugin:u,serializableCache:f}){const T={...ia,...t};return{authOptions:ga(r),systemOptions:{...ii,...e},loggerOptions:T,cacheOptions:{...sa,...n},storageInterface:o||new oa(r.clientId,At,new Ce(T),new ri),networkInterface:i||aa,cryptoInterface:s||At,clientCredentials:a||la,libraryInfo:{...ca,...c},telemetry:{...da,...l},serverTelemetryManager:d||null,persistencePlugin:u||null,serializableCache:f||null}}function ga(r){return{clientCapabilities:[],azureCloudOptions:ha,skipAuthorityMetadataCache:!1,instanceAware:!1,encodeExtraQueryParams:!1,...r}}function si(r){return r.authOptions.authority.options.protocolMode===z.OIDC}/*! @azure/msal-common v15.13.0 2025-09-24 */const J={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v15.13.0 2025-09-24 */function kt(r,e){if(!r)throw p(wr);try{const t=e(r);return JSON.parse(t)}catch{throw p(Rn)}}function Ne(r){if(!r)throw p(Rn);const e=r.split(Xe.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?m.EMPTY_STRING:e[1]}}/*! @azure/msal-common v15.13.0 2025-09-24 */const we="client_id",ai="redirect_uri",ma="response_type",pa="response_mode",fa="grant_type",Ca="claims",ya="scope",Ta="refresh_token",Aa="state",Ia="nonce",wa="prompt",Ea="code",ka="code_challenge",va="code_challenge_method",Sa="code_verifier",_a="client-request-id",Ra="x-client-SKU",ba="x-client-VER",Pa="x-client-OS",Oa="x-client-CPU",Na="x-client-current-telemetry",Ma="x-client-last-telemetry",xa="x-ms-lib-capability",Ua="x-app-name",Da="x-app-ver",La="post_logout_redirect_uri",Ha="id_token_hint",Fa="client_secret",Ka="client_assertion",Ba="client_assertion_type",ci="token_type",li="req_cnf",Vo="return_spa_code",Ga="nativebroker",za="logout_hint",qa="sid",ja="login_hint",$a="domain_hint",Va="x-client-xtra-sku",vt="brk_client_id",St="brk_redirect_uri",Cn="instance_aware",Qa="ear_jwk",Wa="ear_jwe_crypto";/*! @azure/msal-common v15.13.0 2025-09-24 */function Ft(r,e,t){if(!e)return;const n=r.get(we);n&&r.has(vt)&&t?.addFields({embeddedClientId:n,embeddedRedirectUri:r.get(ai)},e)}function jn(r,e){r.set(ma,e)}function Ya(r,e){r.set(pa,e||Ns.QUERY)}function Ja(r){r.set(Ga,"1")}function $n(r,e,t=!0,n=De){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],i=new M(o);r.set(ya,i.printScopes())}function Vn(r,e){r.set(we,e)}function Qn(r,e){r.set(ai,e)}function Xa(r,e){r.set(La,e)}function Za(r,e){r.set(Ha,e)}function ec(r,e){r.set($a,e)}function lt(r,e){r.set(ja,e)}function _t(r,e){r.set(B.CCS_HEADER,`UPN:${e}`)}function Ve(r,e){r.set(B.CCS_HEADER,`Oid:${e.uid}@${e.utid}`)}function Qo(r,e){r.set(qa,e)}function Wn(r,e,t){const n=sc(e,t);try{JSON.parse(n)}catch{throw b(Ln)}r.set(Ca,n)}function Yn(r,e){r.set(_a,e)}function Jn(r,e){r.set(Ra,e.sku),r.set(ba,e.version),e.os&&r.set(Pa,e.os),e.cpu&&r.set(Oa,e.cpu)}function Xn(r,e){e?.appName&&r.set(Ua,e.appName),e?.appVersion&&r.set(Da,e.appVersion)}function tc(r,e){r.set(wa,e)}function hi(r,e){e&&r.set(Aa,e)}function nc(r,e){r.set(Ia,e)}function di(r,e,t){if(e&&t)r.set(ka,e),r.set(va,t);else throw b(Hn)}function oc(r,e){r.set(Ea,e)}function rc(r,e){r.set(Ta,e)}function ic(r,e){r.set(Sa,e)}function ui(r,e){r.set(Fa,e)}function gi(r,e){e&&r.set(Ka,e)}function mi(r,e){e&&r.set(Ba,e)}function pi(r,e){r.set(fa,e)}function Zn(r){r.set(Ms,"1")}function fi(r){r.has(Cn)||r.set(Cn,"true")}function pe(r,e){Object.entries(e).forEach(([t,n])=>{!r.has(t)&&n&&r.set(t,n)})}function sc(r,e){let t;if(!r)t={};else try{t=JSON.parse(r)}catch{throw b(Ln)}return e&&e.length>0&&(t.hasOwnProperty(at.ACCESS_TOKEN)||(t[at.ACCESS_TOKEN]={}),t[at.ACCESS_TOKEN][at.XMS_CC]={values:e}),JSON.stringify(t)}function eo(r,e){e&&(r.set(ci,S.POP),r.set(li,e))}function Ci(r,e){e&&(r.set(ci,S.SSH),r.set(li,e))}function yi(r,e){r.set(Na,e.generateCurrentRequestHeaderValue()),r.set(Ma,e.generateLastRequestHeaderValue())}function Ti(r){r.set(xa,$e.X_MS_LIB_CAPABILITY_VALUE)}function ac(r,e){r.set(za,e)}function Kt(r,e,t){r.has(vt)||r.set(vt,e),r.has(St)||r.set(St,t)}function cc(r,e){r.set(Qa,encodeURIComponent(e)),r.set(Wa,"eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0")}function lc(r,e){Object.entries(e).forEach(([t,n])=>{n&&r.set(t,n)})}/*! @azure/msal-common v15.13.0 2025-09-24 */const Y={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v15.13.0 2025-09-24 */function hc(r){return r.hasOwnProperty("authorization_endpoint")&&r.hasOwnProperty("token_endpoint")&&r.hasOwnProperty("issuer")&&r.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v15.13.0 2025-09-24 */function dc(r){return r.hasOwnProperty("tenant_discovery_endpoint")&&r.hasOwnProperty("metadata")}/*! @azure/msal-common v15.13.0 2025-09-24 */function uc(r){return r.hasOwnProperty("error")&&r.hasOwnProperty("error_description")}/*! @azure/msal-common v15.13.0 2025-09-24 */const Q=(r,e,t,n,o)=>(...i)=>{t.trace(`Executing function ${e}`);const s=n?.startMeasurement(e,o);if(o){const a=e+"CallCount";n?.incrementFields({[a]:1},o)}try{const a=r(...i);return s?.end({success:!0}),t.trace(`Returning result from ${e}`),a}catch(a){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s?.end({success:!1},a),a}},g=(r,e,t,n,o)=>(...i)=>{t.trace(`Executing function ${e}`);const s=n?.startMeasurement(e,o);if(o){const a=e+"CallCount";n?.incrementFields({[a]:1},o)}return n?.setPreQueueTime(e,o),r(...i).then(a=>(t.trace(`Returning result from ${e}`),s?.end({success:!0}),a)).catch(a=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw s?.end({success:!1},a),a})};/*! @azure/msal-common v15.13.0 2025-09-24 */class Bt{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Re.ENVIRONMENT_VARIABLE;else{const o=Bt.IMDS_OPTIONS;try{const i=await g(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(m.IMDS_VERSION,o);if(i.status===ue.SUCCESS&&(n=i.body,t.region_source=Re.IMDS),i.status===ue.BAD_REQUEST){const s=await g(this.getCurrentVersion.bind(this),h.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(o);if(!s)return t.region_source=Re.FAILED_AUTO_DETECTION,null;const a=await g(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(s,o);a.status===ue.SUCCESS&&(n=a.body,t.region_source=Re.IMDS)}}catch{return t.region_source=Re.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Re.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${m.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,m.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${m.IMDS_ENDPOINT}?format=json`,e);return t.status===ue.BAD_REQUEST&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch{return null}}}Bt.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v15.13.0 2025-09-24 */function q(){return Math.round(new Date().getTime()/1e3)}function Wo(r){return r.getTime()/1e3}function Me(r){return r?new Date(Number(r)*1e3):new Date}function Rt(r,e){const t=Number(r)||0;return q()+e>t}function gc(r,e){const t=Number(r)+e*24*60*60*1e3;return Date.now()>t}function mc(r){return Number(r)>q()}/*! @azure/msal-common v15.13.0 2025-09-24 */function Gt(r,e,t,n,o){return{credentialType:L.ID_TOKEN,homeAccountId:r,environment:e,clientId:n,secret:t,realm:o,lastUpdatedAt:Date.now().toString()}}function zt(r,e,t,n,o,i,s,a,c,l,d,u,f,T,k){const w={homeAccountId:r,credentialType:L.ACCESS_TOKEN,secret:t,cachedAt:q().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:e,clientId:n,realm:o,target:i,tokenType:d||S.BEARER,lastUpdatedAt:Date.now().toString()};if(u&&(w.userAssertionHash=u),l&&(w.refreshOn=l.toString()),T&&(w.requestedClaims=T,w.requestedClaimsHash=k),w.tokenType?.toLowerCase()!==S.BEARER.toLowerCase())switch(w.credentialType=L.ACCESS_TOKEN_WITH_AUTH_SCHEME,w.tokenType){case S.POP:const O=Le(t,c);if(!O?.cnf?.kid)throw p(Ur);w.keyId=O.cnf.kid;break;case S.SSH:w.keyId=f}return w}function Ai(r,e,t,n,o,i,s){const a={credentialType:L.REFRESH_TOKEN,homeAccountId:r,environment:e,clientId:n,secret:t,lastUpdatedAt:Date.now().toString()};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function to(r){return r.hasOwnProperty("homeAccountId")&&r.hasOwnProperty("environment")&&r.hasOwnProperty("credentialType")&&r.hasOwnProperty("clientId")&&r.hasOwnProperty("secret")}function Yo(r){return r?to(r)&&r.hasOwnProperty("realm")&&r.hasOwnProperty("target")&&(r.credentialType===L.ACCESS_TOKEN||r.credentialType===L.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function pc(r){return r?to(r)&&r.hasOwnProperty("realm")&&r.credentialType===L.ID_TOKEN:!1}function Jo(r){return r?to(r)&&r.credentialType===L.REFRESH_TOKEN:!1}function fc(r,e){const t=r.indexOf(D.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function Cc(r,e){let t=!1;r&&(t=r.indexOf($e.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function yc({environment:r,clientId:e}){return[_n,r,e].join(Xe.CACHE_KEY_SEPARATOR).toLowerCase()}function Tc(r,e){return e?r.indexOf(_n)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function Ac(r,e){return e?r.indexOf(yt.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function Xo(){return q()+yt.REFRESH_TIME_SECONDS}function ht(r,e,t){r.authorization_endpoint=e.authorization_endpoint,r.token_endpoint=e.token_endpoint,r.end_session_endpoint=e.end_session_endpoint,r.issuer=e.issuer,r.endpointsFromNetwork=t,r.jwks_uri=e.jwks_uri}function rn(r,e,t){r.aliases=e.aliases,r.preferred_cache=e.preferred_cache,r.preferred_network=e.preferred_network,r.aliasesFromNetwork=t}function Zo(r){return r.expiresAt<=q()}/*! @azure/msal-common v15.13.0 2025-09-24 */class F{constructor(e,t,n,o,i,s,a,c){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=i,this.performanceClient=a,this.correlationId=s,this.managedIdentity=c||!1,this.regionDiscovery=new Bt(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(m.CIAM_AUTH_URL))return Y.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case m.ADFS:return Y.Adfs;case m.DSTS:return Y.Dsts}return Y.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new v(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw p(ae)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw p(ae)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw p(ae)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw p(Hr);return this.replacePath(this.metadata.end_session_endpoint)}else throw p(ae)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw p(ae)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw p(ae)}canReplaceTenant(e){return e.PathSegments.length===1&&!F.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===Y.Default&&this.protocolMode!==z.OIDC}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new v(this.metadata.canonical_authority).getUrlComponents(),i=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((a,c)=>{let l=i[c];if(c===0&&this.canReplaceTenant(o)){const d=new v(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];l!==d&&(this.logger.verbose(`Replacing tenant domain name ${l} with id ${d}`),l=d)}a!==l&&(t=t.replace(`/${l}/`,`/${a}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Y.Adfs||this.protocolMode===z.OIDC&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(h.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await g(this.updateCloudDiscoveryMetadata.bind(this),h.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await g(this.updateEndpointMetadata.bind(this),h.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Xo(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==$.CACHE&&n?.source!==$.CACHE&&(e.expiresAt=Xo(),e.canonical_authority=this.canonicalAuthority);const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===$.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){const o=await g(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);ht(e,o,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await g(this.getEndpointMetadataFromNetwork.bind(this),h.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(n=await g(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),ht(e,n,!0),$.NETWORK;throw p(vr,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),ht(e,t,!1),{source:$.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return ht(e,o,!1),{source:$.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=Zo(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:$.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new v(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw b($r)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const n=await this.networkInterface.sendGetRequestAsync(t,e);return hc(n.body)?n.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(n){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${n}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in qo?qo[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==m.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=nn.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,F.replaceWithRegionalInformation(e,t);const n=await g(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),h.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=nn.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,F.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=nn.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await g(this.getCloudDiscoveryMetadataFromNetwork.bind(this),h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return rn(e,n,!0),$.NETWORK;throw b(Vr)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||m.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||m.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||m.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),rn(e,t,!1),$.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=na(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),rn(e,o,!1),$.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=Zo(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),$.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Y.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=wt(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),b(Fn)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${m.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(e,t);let i,s;if(dc(o.body))i=o.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else if(uc(o.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),i=o.body,i.error===m.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=wt(s,this.hostnameAndPort)}catch(o){if(o instanceof R)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${o.errorCode}
Error Description: ${o.errorMessage}`);else{const i=o;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${i.name}
Error Description: ${i.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&v.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==Dn.None){const o=t.tenant?t.tenant:m.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return m.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw p(ae)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return oi.has(e)}static isPublicCloudAuthority(e){return m.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new v(e);o.validateAsUri();const i=o.getUrlComponents();let s=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${t}.${m.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=v.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=F.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=F.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=F.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new v(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(m.CIAM_AUTH_URL)){const i=o.HostNameAndPort.split(".")[0];t=`${t}${i}${m.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}F.reservedTenantDomains=new Set(["{tenant}","{tenantid}",ge.COMMON,ge.CONSUMERS,ge.ORGANIZATIONS]);function Ic(r){const n=new v(r).getUrlComponents().PathSegments.slice(-1)[0]?.toLowerCase();switch(n){case ge.COMMON:case ge.ORGANIZATIONS:case ge.CONSUMERS:return;default:return n}}function Ii(r){return r.endsWith(m.FORWARD_SLASH)?r:`${r}${m.FORWARD_SLASH}`}function wc(r){const e=r.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw b(Fn)}return{canonicalAuthority:r.authority?Ii(r.authority):void 0,knownAuthorities:r.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v15.13.0 2025-09-24 */async function wi(r,e,t,n,o,i,s){s?.addQueueMeasurement(h.AuthorityFactoryCreateDiscoveredInstance,i);const a=F.transformCIAMAuthority(Ii(r)),c=new F(a,e,t,n,o,i,s);try{return await g(c.resolveEndpointsAsync.bind(c),h.AuthorityResolveEndpointsAsync,o,s,i)(),c}catch{throw p(ae)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class Se extends R{constructor(e,t,n,o,i){super(e,t,n),this.name="ServerError",this.errorNo=o,this.status=i,Object.setPrototypeOf(this,Se.prototype)}}/*! @azure/msal-common v15.13.0 2025-09-24 */function qt(r,e,t){return{clientId:r,authority:e.authority,scopes:e.scopes,homeAccountIdentifier:t,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,embeddedClientId:e.embeddedClientId||e.tokenBodyParameters?.clientId}}/*! @azure/msal-common v15.13.0 2025-09-24 */class oe{static generateThrottlingStorageKey(e){return`${$e.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t,n){const o=oe.generateThrottlingStorageKey(t),i=e.getThrottlingCache(o);if(i){if(i.throttleTime<Date.now()){e.removeItem(o,n);return}throw new Se(i.errorCodes?.join(" ")||m.EMPTY_STRING,i.errorMessage,i.subError)}}static postProcess(e,t,n,o){if(oe.checkResponseStatus(n)||oe.checkResponseForRetryAfter(n)){const i={throttleTime:oe.calculateThrottleTime(parseInt(n.headers[B.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(oe.generateThrottlingStorageKey(t),i,o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(B.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||$e.DEFAULT_THROTTLE_TIME_SECONDS),n+$e.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const i=qt(t,n,o),s=this.generateThrottlingStorageKey(i);e.removeItem(s,n.correlationId)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class jt extends R{constructor(e,t,n){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,jt.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=n}}function je(r,e,t,n){return r.errorMessage=`${r.errorMessage}, additionalErrorInfo: error.name:${n?.name}, error.message:${n?.message}`,new jt(r,e,t)}/*! @azure/msal-common v15.13.0 2025-09-24 */class no{constructor(e,t){this.config=ua(e),this.logger=new Ce(this.config.loggerOptions,Fr,Un),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[B.CONTENT_TYPE]=m.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case J.HOME_ACCOUNT_ID:try{const n=Ne(e.credential);t[B.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case J.UPN:t[B.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,i,s){s&&this.performanceClient?.addQueueMeasurement(s,i);const a=await this.sendPostRequest(o,e,{body:t,headers:n},i);return this.config.serverTelemetryManager&&a.status<500&&a.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async sendPostRequest(e,t,n,o){oe.preProcess(this.cacheManager,e,o);let i;try{i=await g(this.networkClient.sendPostRequestAsync.bind(this.networkClient),h.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,o)(t,n);const s=i.headers||{};this.performanceClient?.addFields({refreshTokenSize:i.body.refresh_token?.length||0,httpVerToken:s[B.X_MS_HTTP_VERSION]||"",requestId:s[B.X_MS_REQUEST_ID]||""},o)}catch(s){if(s instanceof jt){const a=s.responseHeaders;throw a&&this.performanceClient?.addFields({httpVerToken:a[B.X_MS_HTTP_VERSION]||"",requestId:a[B.X_MS_REQUEST_ID]||"",contentTypeHeader:a[B.CONTENT_TYPE]||void 0,contentLengthHeader:a[B.CONTENT_LENGTH]||void 0,httpStatus:s.httpStatus},o),s.error}throw s instanceof R?s:p(kr)}return oe.postProcess(this.cacheManager,e,i,o),i}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(h.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await wi(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new Map;return e.embeddedClientId&&Kt(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenQueryParameters&&pe(t,e.tokenQueryParameters),Yn(t,e.correlationId),Ft(t,e.correlationId,this.performanceClient),Ze(t)}}/*! @azure/msal-common v15.13.0 2025-09-24 */function Ei(r){return r&&(r.tid||r.tfp||r.acr)||null}/*! @azure/msal-common v15.13.0 2025-09-24 */class Z{getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,loginHint:this.loginHint,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e])),dataBoundary:this.dataBoundary}}isSingleTenant(){return!this.tenantProfiles}static createAccount(e,t,n){const o=new Z;t.authorityType===Y.Adfs?o.authorityType=ct.ADFS_ACCOUNT_TYPE:t.protocolMode===z.OIDC?o.authorityType=ct.GENERIC_ACCOUNT_TYPE:o.authorityType=ct.MSSTS_ACCOUNT_TYPE;let i;e.clientInfo&&n&&(i=kt(e.clientInfo,n),i.xms_tdbr&&(o.dataBoundary=i.xms_tdbr==="EU"?"EU":"None")),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;const s=e.environment||t&&t.getPreferredCache();if(!s)throw p(Nn);o.environment=s,o.realm=i?.utid||Ei(e.idTokenClaims)||"",o.localAccountId=i?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const a=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,c=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(o.username=a||c||"",o.loginHint=e.idTokenClaims?.login_hint,o.name=e.idTokenClaims?.name||"",o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{const l=Bn(e.homeAccountId,o.localAccountId,o.realm,e.idTokenClaims);o.tenantProfiles=[l]}return o}static createFromAccountInfo(e,t,n){const o=new Z;return o.authorityType=e.authorityType||ct.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.loginHint=e.loginHint,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),o.dataBoundary=e.dataBoundary,o}static generateHomeAccountId(e,t,n,o,i){if(!(t===Y.Adfs||t===Y.Dsts)){if(e)try{const s=kt(e,o.base64Decode);if(s.uid&&s.utid)return`${s.uid}.${s.utid}`}catch{}n.warning("No client info in response")}return i?.sub||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const i=e.idTokenClaims||{},s=t.idTokenClaims||{};o=i.iat===s.iat&&i.nonce===s.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.loginHint===t.loginHint&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v15.13.0 2025-09-24 */const bt="no_tokens_found",ki="native_account_unavailable",oo="refresh_token_expired",ro="ux_not_allowed",Ec="interaction_required",kc="consent_required",vc="login_required",$t="bad_token";/*! @azure/msal-common v15.13.0 2025-09-24 */const er=[Ec,kc,vc,$t,ro],Sc=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],_c={[bt]:"No refresh token found in the cache. Please sign-in.",[ki]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[oo]:"Refresh token has expired.",[$t]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",[ro]:"`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve."};class ee extends R{constructor(e,t,n,o,i,s,a,c){super(e,t,n),Object.setPrototypeOf(this,ee.prototype),this.timestamp=o||m.EMPTY_STRING,this.traceId=i||m.EMPTY_STRING,this.correlationId=s||m.EMPTY_STRING,this.claims=a||m.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function vi(r,e,t){const n=!!r&&er.indexOf(r)>-1,o=!!t&&Sc.indexOf(t)>-1,i=!!e&&er.some(s=>e.indexOf(s)>-1);return n||i||o}function Pt(r){return new ee(r,_c[r])}/*! @azure/msal-common v15.13.0 2025-09-24 */class He{static setRequestState(e,t,n){const o=He.generateLibraryState(e,n);return t?`${o}${m.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw p(mn);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw p(mn);if(!t)throw p(xe);try{const n=t.split(m.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(m.RESOURCE_DELIM):m.EMPTY_STRING,s=e.base64Decode(o),a=JSON.parse(s);return{userRequestState:i||m.EMPTY_STRING,libraryState:a}}catch{throw p(xe)}}}/*! @azure/msal-common v15.13.0 2025-09-24 */const Rc={SW:"sw"};class Ue{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateCnf,e.correlationId);const n=await g(this.generateKid.bind(this),h.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Rc.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:i,resourceRequestUri:s,shrClaims:a,shrNonce:c,shrOptions:l}=n,u=(s?new v(s):void 0)?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:q(),m:i?.toUpperCase(),u:u?.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:u?.AbsolutePath,q:u?.QueryString?[[],u.QueryString]:void 0,client_claims:a||void 0,...o},t,l,n.correlationId)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class bc{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v15.13.0 2025-09-24 */class Ee{constructor(e,t,n,o,i,s,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=i,this.persistencePlugin=s,this.performanceClient=a}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`Error(s): ${e.error_codes||m.NOT_AVAILABLE} - Timestamp: ${e.timestamp||m.NOT_AVAILABLE} - Description: ${e.error_description||m.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||m.NOT_AVAILABLE} - Trace ID: ${e.trace_id||m.NOT_AVAILABLE}`,o=e.error_codes?.length?e.error_codes[0]:void 0,i=new Se(e.error,n,e.suberror,o,e.status);if(t&&e.status&&e.status>=ue.SERVER_ERROR_RANGE_START&&e.status<=ue.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${i}`);return}else if(t&&e.status&&e.status>=ue.CLIENT_ERROR_RANGE_START&&e.status<=ue.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${i}`);return}throw vi(e.error,e.error_description,e.suberror)?new ee(e.error,e.error_description,e.suberror,e.timestamp||m.EMPTY_STRING,e.trace_id||m.EMPTY_STRING,e.correlation_id||m.EMPTY_STRING,e.claims||m.EMPTY_STRING,o):i}}async handleServerTokenResponse(e,t,n,o,i,s,a,c,l){this.performanceClient?.addQueueMeasurement(h.HandleServerTokenResponse,e.correlation_id);let d;if(e.id_token){if(d=Le(e.id_token||m.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&d.nonce!==i.nonce)throw p(Rr);if(o.maxAge||o.maxAge===0){const k=d.auth_time;if(!k)throw p(Pn);ei(k,o.maxAge)}}this.homeAccountIdentifier=Z.generateHomeAccountId(e.client_info||m.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,d);let u;i&&i.state&&(u=He.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||o.sshKid||void 0;const f=this.generateCacheRecord(e,t,n,o,d,s,i);let T;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),T=new bc(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(T)),a&&!c&&f.account){const k=this.cacheStorage.generateAccountKey(f.account.getAccountInfo());if(!this.cacheStorage.getAccount(k,o.correlationId))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Ee.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,d,u,void 0,l)}await this.cacheStorage.saveCacheRecord(f,o.correlationId,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&T&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(T))}return Ee.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,d,u,e,l)}generateCacheRecord(e,t,n,o,i,s,a){const c=t.getPreferredCache();if(!c)throw p(Nn);const l=Ei(i);let d,u;e.id_token&&i&&(d=Gt(this.homeAccountIdentifier,c,e.id_token,this.clientId,l||""),u=io(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o.correlationId,i,e.client_info,c,l,a,void 0,this.logger));let f=null;if(e.access_token){const w=e.scope?M.fromString(e.scope):new M(o.scopes||[]),O=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,ie=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,j=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,it=n+O,tn=it+ie,st=j&&j>0?n+j:void 0;f=zt(this.homeAccountIdentifier,c,e.access_token,this.clientId,l||t.tenant||"",w.printScopes(),it,tn,this.cryptoObj.base64Decode,st,e.token_type,s,e.key_id,o.claims,o.requestedClaimsHash)}let T=null;if(e.refresh_token){let w;if(e.refresh_token_expires_in){const O=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;w=n+O}T=Ai(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,s,w)}let k=null;return e.foci&&(k={clientId:this.clientId,environment:c,familyId:e.foci}),{account:u,idToken:d,accessToken:f,refreshToken:T,appMetadata:k}}static async generateAuthenticationResult(e,t,n,o,i,s,a,c,l){let d=m.EMPTY_STRING,u=[],f=null,T,k,w=m.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===S.POP&&!i.popKid){const it=new Ue(e),{secret:tn,keyId:st}=n.accessToken;if(!st)throw p(Mn);d=await it.signPopToken(tn,st,i)}else d=n.accessToken.secret;u=M.fromString(n.accessToken.target).asArray(),f=Me(n.accessToken.expiresOn),T=Me(n.accessToken.extendedExpiresOn),n.accessToken.refreshOn&&(k=Me(n.accessToken.refreshOn))}n.appMetadata&&(w=n.appMetadata.familyId===Ct?Ct:"");const O=s?.oid||s?.sub||"",ie=s?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const j=n.account?Gn(n.account.getAccountInfo(),void 0,s,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:O,tenantId:ie,scopes:u,account:j,idToken:n?.idToken?.secret||"",idTokenClaims:s||{},accessToken:d,fromCache:o,expiresOn:f,extExpiresOn:T,refreshOn:k,correlationId:i.correlationId,requestId:l||m.EMPTY_STRING,familyId:w,tokenType:n.accessToken?.tokenType||m.EMPTY_STRING,state:a?a.userRequestState:m.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||m.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||m.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function io(r,e,t,n,o,i,s,a,c,l,d,u){u?.verbose("setCachedAccount called");const T=r.getAccountKeys().find(j=>j.startsWith(t));let k=null;T&&(k=r.getAccount(T,o));const w=k||Z.createAccount({homeAccountId:t,idTokenClaims:i,clientInfo:s,environment:a,cloudGraphHostName:l?.cloud_graph_host_name,msGraphHost:l?.msgraph_host,nativeAccountId:d},e,n),O=w.tenantProfiles||[],ie=c||w.realm;if(ie&&!O.find(j=>j.tenantId===ie)){const j=Bn(t,w.localAccountId,ie,i);O.push(j)}return w.tenantProfiles=O,w}/*! @azure/msal-common v15.13.0 2025-09-24 */async function Si(r,e,t){return typeof r=="string"?r:r({clientId:e,tokenEndpoint:t})}/*! @azure/msal-common v15.13.0 2025-09-24 */class _i extends no{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(h.AuthClientAcquireToken,e.correlationId),!e.code)throw p(Or);const n=q(),o=await g(this.executeTokenRequest.bind(this),h.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),i=o.headers?.[B.X_MS_REQUEST_ID],s=new Ee(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return s.validateTokenResponse(o.body),g(s.handleServerTokenResponse.bind(s),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,i)}getLogoutUri(e){if(!e)throw b(jr);const t=this.createLogoutUrlQueryString(e);return v.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=v.appendQueryString(e.tokenEndpoint,n),i=await g(this.createTokenRequestBody.bind(this),h.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let s;if(t.clientInfo)try{const l=kt(t.clientInfo,this.cryptoUtils.base64Decode);s={credential:`${l.uid}${Xe.CLIENT_INFO_SEPARATOR}${l.utid}`,type:J.HOME_ACCOUNT_ID}}catch(l){this.logger.verbose("Could not parse client info for CCS Header: "+l)}const a=this.createTokenRequestHeaders(s||t.ccsCredential),c=qt(this.config.authOptions.clientId,t);return g(this.executePostToTokenEndpoint.bind(this),h.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,i,a,c,t.correlationId,h.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(Vn(t,e.embeddedClientId||e.tokenBodyParameters?.[we]||this.config.authOptions.clientId),this.includeRedirectUri)Qn(t,e.redirectUri);else if(!e.redirectUri)throw b(Kr);if($n(t,e.scopes,!0,this.oidcDefaultScopes),oc(t,e.code),Jn(t,this.config.libraryInfo),Xn(t,this.config.telemetry.application),Ti(t),this.serverTelemetryManager&&!si(this.config)&&yi(t,this.serverTelemetryManager),e.codeVerifier&&ic(t,e.codeVerifier),this.config.clientCredentials.clientSecret&&ui(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const o=this.config.clientCredentials.clientAssertion;gi(t,await Si(o.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),mi(t,o.assertionType)}if(pi(t,Ar.AUTHORIZATION_CODE_GRANT),Zn(t),e.authenticationScheme===S.POP){const o=new Ue(this.cryptoUtils,this.performanceClient);let i;e.popKid?i=this.cryptoUtils.encodeKid(e.popKid):i=(await g(o.generateCnf.bind(o),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,eo(t,i)}else if(e.authenticationScheme===S.SSH)if(e.sshJwk)Ci(t,e.sshJwk);else throw b(Ht);(!V.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Wn(t,e.claims,this.config.authOptions.clientCapabilities);let n;if(e.clientInfo)try{const o=kt(e.clientInfo,this.cryptoUtils.base64Decode);n={credential:`${o.uid}${Xe.CLIENT_INFO_SEPARATOR}${o.utid}`,type:J.HOME_ACCOUNT_ID}}catch(o){this.logger.verbose("Could not parse client info for CCS Header: "+o)}else n=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&n)switch(n.type){case J.HOME_ACCOUNT_ID:try{const o=Ne(n.credential);Ve(t,o)}catch(o){this.logger.verbose("Could not parse home account ID for CCS Header: "+o)}break;case J.UPN:_t(t,n.credential);break}return e.embeddedClientId&&Kt(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&pe(t,e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[Vo])&&pe(t,{[Vo]:"1"}),Ft(t,e.correlationId,this.performanceClient),Ze(t)}createLogoutUrlQueryString(e){const t=new Map;return e.postLogoutRedirectUri&&Xa(t,e.postLogoutRedirectUri),e.correlationId&&Yn(t,e.correlationId),e.idTokenHint&&Za(t,e.idTokenHint),e.state&&hi(t,e.state),e.logoutHint&&ac(t,e.logoutHint),e.extraQueryParameters&&pe(t,e.extraQueryParameters),this.config.authOptions.instanceAware&&fi(t),Ze(t,this.config.authOptions.encodeExtraQueryParams,e.extraQueryParameters)}}/*! @azure/msal-common v15.13.0 2025-09-24 */const Pc=300;class Oc extends no{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireToken,e.correlationId);const t=q(),n=await g(this.executeTokenRequest.bind(this),h.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=n.headers?.[B.X_MS_REQUEST_ID],i=new Ee(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return i.validateTokenResponse(n.body),g(i.handleServerTokenResponse.bind(i),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){if(!e)throw b(qr);if(this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw p(On);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await g(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(n){const o=n instanceof ee&&n.errorCode===bt,i=n instanceof Se&&n.errorCode===Ho.INVALID_GRANT_ERROR&&n.subError===Ho.CLIENT_MISMATCH_ERROR;if(o||i)return g(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw n}return g(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=Q(this.cacheManager.getRefreshToken.bind(this.cacheManager),h.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,e.correlationId,void 0,this.performanceClient);if(!n)throw Pt(bt);if(n.expiresOn&&Rt(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||Pc))throw this.performanceClient?.addFields({rtExpiresOnMs:Number(n.expiresOn)},e.correlationId),Pt(oo);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||S.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:J.HOME_ACCOUNT_ID}};try{return await g(this.acquireToken.bind(this),h.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}catch(i){if(i instanceof ee&&(this.performanceClient?.addFields({rtExpiresOnMs:Number(n.expiresOn)},e.correlationId),i.subError===$t)){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const s=this.cacheManager.generateCredentialKey(n);this.cacheManager.removeRefreshToken(s,e.correlationId)}throw i}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=v.appendQueryString(t.tokenEndpoint,n),i=await g(this.createTokenRequestBody.bind(this),h.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),s=this.createTokenRequestHeaders(e.ccsCredential),a=qt(this.config.authOptions.clientId,e);return g(this.executePostToTokenEndpoint.bind(this),h.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,i,s,a,e.correlationId,h.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=new Map;if(Vn(t,e.embeddedClientId||e.tokenBodyParameters?.[we]||this.config.authOptions.clientId),e.redirectUri&&Qn(t,e.redirectUri),$n(t,e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),pi(t,Ar.REFRESH_TOKEN_GRANT),Zn(t),Jn(t,this.config.libraryInfo),Xn(t,this.config.telemetry.application),Ti(t),this.serverTelemetryManager&&!si(this.config)&&yi(t,this.serverTelemetryManager),rc(t,e.refreshToken),this.config.clientCredentials.clientSecret&&ui(t,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const n=this.config.clientCredentials.clientAssertion;gi(t,await Si(n.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),mi(t,n.assertionType)}if(e.authenticationScheme===S.POP){const n=new Ue(this.cryptoUtils,this.performanceClient);let o;e.popKid?o=this.cryptoUtils.encodeKid(e.popKid):o=(await g(n.generateCnf.bind(n),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,eo(t,o)}else if(e.authenticationScheme===S.SSH)if(e.sshJwk)Ci(t,e.sshJwk);else throw b(Ht);if((!V.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Wn(t,e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case J.HOME_ACCOUNT_ID:try{const n=Ne(e.ccsCredential.credential);Ve(t,n)}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case J.UPN:_t(t,e.ccsCredential.credential);break}return e.embeddedClientId&&Kt(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&pe(t,e.tokenBodyParameters),Ft(t,e.correlationId,this.performanceClient),Ze(t)}}/*! @azure/msal-common v15.13.0 2025-09-24 */class Nc extends no{constructor(e,t){super(e,t)}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientAcquireCachedToken,e.correlationId);let t=Te.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!V.isEmptyObj(e.claims))throw this.setCacheOutcome(Te.FORCE_REFRESH_OR_CLAIMS,e.correlationId),p(me);if(!e.account)throw p(On);const n=e.account.tenantId||Ic(e.authority),o=this.cacheManager.getTokenKeys(),i=this.cacheManager.getAccessToken(e.account,e,o,n);if(i){if(mc(i.cachedAt)||Rt(i.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(Te.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),p(me);i.refreshOn&&Rt(i.refreshOn,0)&&(t=Te.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(Te.NO_CACHED_ACCESS_TOKEN,e.correlationId),p(me);const s=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.getAccount(this.cacheManager.generateAccountKey(e.account),e.correlationId),accessToken:i,idToken:this.cacheManager.getIdToken(e.account,e.correlationId,o,n,this.performanceClient),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(s)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await g(this.generateResultFromCacheRecord.bind(this),h.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==Te.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=Le(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const o=n?.auth_time;if(!o)throw p(Pn);ei(o,t.maxAge)}return Ee.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v15.13.0 2025-09-24 */const Mc={sendGetRequestAsync:()=>Promise.reject(p(E)),sendPostRequestAsync:()=>Promise.reject(p(E))};/*! @azure/msal-common v15.13.0 2025-09-24 */function xc(r,e,t,n){const o=e.correlationId,i=new Map;Vn(i,e.embeddedClientId||e.extraQueryParameters?.[we]||r.clientId);const s=[...e.scopes||[],...e.extraScopesToConsent||[]];if($n(i,s,!0,r.authority.options.OIDCOptions?.defaultScopes),Qn(i,e.redirectUri),Yn(i,o),Ya(i,e.responseMode),Zn(i),e.prompt&&(tc(i,e.prompt),n?.addFields({prompt:e.prompt},o)),e.domainHint&&(ec(i,e.domainHint),n?.addFields({domainHintFromRequest:!0},o)),e.prompt!==H.SELECT_ACCOUNT)if(e.sid&&e.prompt===H.NONE)t.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),Qo(i,e.sid),n?.addFields({sidFromRequest:!0},o);else if(e.account){const a=Lc(e.account);let c=Hc(e.account);if(c&&e.domainHint&&(t.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),c=null),c){t.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),lt(i,c),n?.addFields({loginHintFromClaim:!0},o);try{const l=Ne(e.account.homeAccountId);Ve(i,l)}catch{t.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(a&&e.prompt===H.NONE){t.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),Qo(i,a),n?.addFields({sidFromClaim:!0},o);try{const l=Ne(e.account.homeAccountId);Ve(i,l)}catch{t.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)t.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),lt(i,e.loginHint),_t(i,e.loginHint),n?.addFields({loginHintFromRequest:!0},o);else if(e.account.username){t.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),lt(i,e.account.username),n?.addFields({loginHintFromUpn:!0},o);try{const l=Ne(e.account.homeAccountId);Ve(i,l)}catch{t.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(t.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),lt(i,e.loginHint),_t(i,e.loginHint),n?.addFields({loginHintFromRequest:!0},o));else t.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");return e.nonce&&nc(i,e.nonce),e.state&&hi(i,e.state),(e.claims||r.clientCapabilities&&r.clientCapabilities.length>0)&&Wn(i,e.claims,r.clientCapabilities),e.embeddedClientId&&Kt(i,r.clientId,r.redirectUri),r.instanceAware&&(!e.extraQueryParameters||!Object.keys(e.extraQueryParameters).includes(Cn))&&fi(i),i}function so(r,e,t,n){const o=Ze(e,t,n);return v.appendQueryString(r.authorizationEndpoint,o)}function Uc(r,e){if(Ri(r,e),!r.code)throw p(Dr);return r}function Ri(r,e){if(!r.state||!e)throw r.state?p(dn,"Cached State"):p(dn,"Server State");let t,n;try{t=decodeURIComponent(r.state)}catch{throw p(xe,r.state)}try{n=decodeURIComponent(e)}catch{throw p(xe,r.state)}if(t!==n)throw p(_r);if(r.error||r.error_description||r.suberror){const o=Dc(r);throw vi(r.error,r.error_description,r.suberror)?new ee(r.error||"",r.error_description,r.suberror,r.timestamp||"",r.trace_id||"",r.correlation_id||"",r.claims||"",o):new Se(r.error||"",r.error_description,r.suberror,o)}}function Dc(r){const e="code=",t=r.error_uri?.lastIndexOf(e);return t&&t>=0?r.error_uri?.substring(t+e.length):void 0}function Lc(r){return r.idTokenClaims?.sid||null}function Hc(r){return r.loginHint||r.idTokenClaims?.login_hint||null}/*! @azure/msal-common v15.13.0 2025-09-24 */const tr=",",bi="|";function Fc(r){const{skus:e,libraryName:t,libraryVersion:n,extensionName:o,extensionVersion:i}=r,s=new Map([[0,[t,n]],[2,[o,i]]]);let a=[];if(e?.length){if(a=e.split(tr),a.length<4)return e}else a=Array.from({length:4},()=>bi);return s.forEach((c,l)=>{c.length===2&&c[0]?.length&&c[1]?.length&&Kc({skuArr:a,index:l,skuName:c[0],skuVersion:c[1]})}),a.join(tr)}function Kc(r){const{skuArr:e,index:t,skuName:n,skuVersion:o}=r;t>=e.length||(e[t]=[n,o].join(bi))}class et{constructor(e,t){this.cacheOutcome=Te.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||m.EMPTY_STRING,this.wrapperVer=e.wrapperVer||m.EMPTY_STRING,this.telemetryCacheKey=D.CACHE_KEY+Xe.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${D.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n?.length&&t.push(`broker_error=${n}`);const o=t.join(D.VALUE_SEPARATOR),i=this.getRegionDiscoveryFields(),s=[e,i].join(D.VALUE_SEPARATOR);return[D.SCHEMA_VERSION,s,o].join(D.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=et.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(D.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(D.VALUE_SEPARATOR),i=e.errors.length,s=t<i?D.OVERFLOW_TRUE:D.OVERFLOW_FALSE,a=[i,s].join(D.VALUE_SEPARATOR);return[D.SCHEMA_VERSION,e.cacheHits,n,o,a].join(D.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=D.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof R?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(D.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=et.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey,this.correlationId);else{const o={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o,this.correlationId)}}static maxErrorsToSend(e){let t,n=0,o=0;const i=e.errors.length;for(t=0;t<i;t++){const s=e.failedRequests[2*t]||m.EMPTY_STRING,a=e.failedRequests[2*t+1]||m.EMPTY_STRING,c=e.errors[t]||m.EMPTY_STRING;if(o+=s.toString().length+a.toString().length+c.length+3,o<D.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||m.EMPTY_STRING),e.push(this.regionSource||m.EMPTY_STRING),e.push(this.regionOutcome||m.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId)}static makeExtraSkuString(e){return Fc(e)}}/*! @azure/msal-common v15.13.0 2025-09-24 */const Pi="missing_kid_error",Oi="missing_alg_error";/*! @azure/msal-common v15.13.0 2025-09-24 */const Bc={[Pi]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Oi]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class ao extends R{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,ao.prototype)}}function nr(r){return new ao(r,Bc[r])}/*! @azure/msal-common v15.13.0 2025-09-24 */class co{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw nr(Pi);if(!e.alg)throw nr(Oi);const t=new co({typ:e.typ||xs.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */const lo="pkce_not_created",ho="ear_jwk_empty",Ni="ear_jwe_empty",yn="crypto_nonexistent",Vt="empty_navigate_uri",Mi="hash_empty_error",uo="no_state_in_hash",xi="hash_does_not_contain_known_properties",Ui="unable_to_parse_state",Di="state_interaction_type_mismatch",Li="interaction_in_progress",Hi="popup_window_error",Fi="empty_window_error",tt="user_cancelled",Gc="monitor_popup_timeout",Ki="monitor_window_timeout",Bi="redirect_in_iframe",Gi="block_iframe_reload",zi="block_nested_popups",zc="iframe_closed_prematurely",Qt="silent_logout_unsupported",qi="no_account_error",qc="silent_prompt_value_error",ji="no_token_request_cache_error",$i="unable_to_parse_token_request_cache_error",jc="auth_request_not_set_error",$c="invalid_cache_type",Wt="non_browser_environment",be="database_not_open",Ot="no_network_connectivity",Vi="post_request_failed",Qi="get_request_failed",Tn="failed_to_parse_response",Wi="unable_to_load_token",go="crypto_key_not_found",Yi="auth_code_required",Ji="auth_code_or_nativeAccountId_required",Xi="spa_code_and_nativeAccountId_present",mo="database_unavailable",Zi="unable_to_acquire_token_from_native_platform",es="native_handshake_timeout",ts="native_extension_not_installed",po="native_connection_not_established",Qe="uninitialized_public_client_application",ns="native_prompt_not_supported",os="invalid_base64_string",rs="invalid_pop_token_request",is="failed_to_build_headers",ss="failed_to_parse_headers",mt="failed_to_decrypt_ear_response",Nt="timed_out";/*! @azure/msal-browser v4.25.1 2025-10-17 */const se="For more visit: aka.ms/msaljs/browser-errors",Vc={[lo]:"The PKCE code challenge and verifier could not be generated.",[ho]:"No EAR encryption key provided. This is unexpected.",[Ni]:"Server response does not contain ear_jwe property. This is unexpected.",[yn]:"The crypto object or function is not available.",[Vt]:"Navigation URI is empty. Please check stack trace for more info.",[Mi]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${se}`,[uo]:"Hash does not contain state. Please verify that the request originated from msal.",[xi]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${se}`,[Ui]:"Unable to parse state. Please verify that the request originated from msal.",[Di]:"Hash contains state but the interaction type does not match the caller.",[Li]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${se}`,[Hi]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[Fi]:"window.open returned null or undefined window object.",[tt]:"User cancelled the flow.",[Gc]:`Token acquisition in popup failed due to timeout.  ${se}`,[Ki]:`Token acquisition in iframe failed due to timeout.  ${se}`,[Bi]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Gi]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${se}`,[zi]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[zc]:"The iframe being monitored was closed prematurely.",[Qt]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[qi]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[qc]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[ji]:"No token request found in cache.",[$i]:"The cached token request could not be parsed.",[jc]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[$c]:"Invalid cache type",[Wt]:"Login and token requests are not supported in non-browser environments.",[be]:"Database is not open!",[Ot]:"No network connectivity. Check your internet connection.",[Vi]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Qi]:"Network request failed. Please check the network trace to determine root cause.",[Tn]:"Failed to parse network response. Check network trace.",[Wi]:"Error loading token to cache.",[go]:"Cryptographic Key or Keypair not found in browser storage.",[Yi]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Ji]:"An authorization code or nativeAccountId must be provided to this flow.",[Xi]:"Request cannot contain both spa code and native account id.",[mo]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Zi]:`Unable to acquire token from native platform.  ${se}`,[es]:"Timed out while attempting to establish connection to browser extension",[ts]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[po]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${se}`,[Qe]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${se}`,[ns]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[os]:"Invalid base64 encoded string.",[rs]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[is]:"Failed to build request headers object.",[ss]:"Failed to parse response headers",[mt]:"Failed to decrypt ear response",[Nt]:"The request timed out."};class rt extends R{constructor(e,t){super(e,Vc[e],t),Object.setPrototypeOf(this,rt.prototype),this.name="BrowserAuthError"}}function C(r,e){return new rt(r,e)}/*! @azure/msal-browser v4.25.1 2025-10-17 */const G={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},W={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS",MICROSOFT_ENTRA_BROKERID:"MicrosoftEntra",DOM_API_NAME:"DOM API",PLATFORM_DOM_APIS:"get-token-and-sign-out",PLATFORM_DOM_PROVIDER:"PlatformAuthDOMHandler",PLATFORM_EXTENSION_PROVIDER:"PlatformAuthExtensionHandler"},Ge={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},x={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},or={GET:"GET",POST:"POST"},de={SIGNIN:"signin",SIGNOUT:"signout"},N={ORIGIN_URI:"request.origin",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",VERIFIER:"code.verifier",INTERACTION_STATUS_KEY:"interaction.status",NATIVE_REQUEST:"request.native"},dt={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},_={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var I;(function(r){r.Redirect="redirect",r.Popup="popup",r.Silent="silent",r.None="none"})(I||(I={}));const rr={scopes:De},as="jwk",An="msal.db",Qc=1,Wc=`${An}.keys`,K={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},Yc=[K.Default,K.Skip,K.RefreshTokenAndNetwork];/*! @azure/msal-browser v4.25.1 2025-10-17 */function ut(r){return encodeURIComponent(nt(r).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function ye(r){return cs(r).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function nt(r){return cs(new TextEncoder().encode(r))}function cs(r){const e=Array.from(r,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v4.25.1 2025-10-17 */function X(r){return new TextDecoder().decode(fe(r))}function fe(r){let e=r.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw C(os)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v4.25.1 2025-10-17 */const Jc="RSASSA-PKCS1-v1_5",Fe="AES-GCM",ls="HKDF",fo="SHA-256",Xc=2048,Zc=new Uint8Array([1,0,1]),ir="0123456789abcdef",sr=new Uint32Array(1),Co="raw",hs="encrypt",yo="decrypt",el="deriveKey",tl="crypto_subtle_undefined",To={name:Jc,hash:fo,modulusLength:Xc,publicExponent:Zc};function nl(r){if(!window)throw C(Wt);if(!window.crypto)throw C(yn);if(!r&&!window.crypto.subtle)throw C(yn,tl)}async function ds(r,e,t){e?.addQueueMeasurement(h.Sha256Digest,t);const o=new TextEncoder().encode(r);return window.crypto.subtle.digest(fo,o)}function ol(r){return window.crypto.getRandomValues(r)}function sn(){return window.crypto.getRandomValues(sr),sr[0]}function te(){const r=Date.now(),e=sn()*1024+(sn()&1023),t=new Uint8Array(16),n=Math.trunc(e/2**30),o=e&2**30-1,i=sn();t[0]=r/2**40,t[1]=r/2**32,t[2]=r/2**24,t[3]=r/2**16,t[4]=r/2**8,t[5]=r,t[6]=112|n>>>8,t[7]=n,t[8]=128|o>>>24,t[9]=o>>>16,t[10]=o>>>8,t[11]=o,t[12]=i>>>24,t[13]=i>>>16,t[14]=i>>>8,t[15]=i;let s="";for(let a=0;a<t.length;a++)s+=ir.charAt(t[a]>>>4),s+=ir.charAt(t[a]&15),(a===3||a===5||a===7||a===9)&&(s+="-");return s}async function rl(r,e){return window.crypto.subtle.generateKey(To,r,e)}async function an(r){return window.crypto.subtle.exportKey(as,r)}async function il(r,e,t){return window.crypto.subtle.importKey(as,r,To,e,t)}async function sl(r,e){return window.crypto.subtle.sign(To,r,e)}async function Ao(){const r=await us(),t={alg:"dir",kty:"oct",k:ye(new Uint8Array(r))};return nt(JSON.stringify(t))}async function al(r){const e=X(r),n=JSON.parse(e).k,o=fe(n);return window.crypto.subtle.importKey(Co,o,Fe,!1,[yo])}async function cl(r,e){const t=e.split(".");if(t.length!==5)throw C(mt,"jwe_length");const n=await al(r).catch(()=>{throw C(mt,"import_key")});try{const o=new TextEncoder().encode(t[0]),i=fe(t[2]),s=fe(t[3]),a=fe(t[4]),c=a.byteLength*8,l=new Uint8Array(s.length+a.length);l.set(s),l.set(a,s.length);const d=await window.crypto.subtle.decrypt({name:Fe,iv:i,tagLength:c,additionalData:o},n,l);return new TextDecoder().decode(d)}catch{throw C(mt,"decrypt")}}async function us(){const r=await window.crypto.subtle.generateKey({name:Fe,length:256},!0,[hs,yo]);return window.crypto.subtle.exportKey(Co,r)}async function ar(r){return window.crypto.subtle.importKey(Co,r,ls,!1,[el])}async function gs(r,e,t){return window.crypto.subtle.deriveKey({name:ls,salt:e,hash:fo,info:new TextEncoder().encode(t)},r,{name:Fe,length:256},!1,[hs,yo])}async function ll(r,e,t){const n=new TextEncoder().encode(e),o=window.crypto.getRandomValues(new Uint8Array(16)),i=await gs(r,o,t),s=await window.crypto.subtle.encrypt({name:Fe,iv:new Uint8Array(12)},i,n);return{data:ye(new Uint8Array(s)),nonce:ye(o)}}async function cr(r,e,t,n){const o=fe(n),i=await gs(r,fe(e),t),s=await window.crypto.subtle.decrypt({name:Fe,iv:new Uint8Array(12)},i,o);return new TextDecoder().decode(s)}async function ms(r){const e=await ds(r),t=new Uint8Array(e);return ye(t)}/*! @azure/msal-browser v4.25.1 2025-10-17 */const Yt="storage_not_supported",ps="stubbed_public_client_application_called",Io="in_mem_redirect_unavailable";/*! @azure/msal-browser v4.25.1 2025-10-17 */const pt={[Yt]:"Given storage configuration option was not supported.",[ps]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Io]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};pt[Yt],pt[ps],pt[Io];class wo extends R{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,wo.prototype)}}function Eo(r){return new wo(r,pt[r])}/*! @azure/msal-browser v4.25.1 2025-10-17 */function fs(r){r.location.hash="",typeof r.history.replaceState=="function"&&r.history.replaceState(null,"",`${r.location.origin}${r.location.pathname}${r.location.search}`)}function hl(r){const e=r.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function ko(){return window.parent!==window}function dl(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${G.POPUP_NAME_PREFIX}.`)===0}function ce(){return typeof window<"u"&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function ul(){const e=new v(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function gl(){if(v.hashContainsKnownProperties(window.location.hash)&&ko())throw C(Gi)}function ml(r){if(ko()&&!r)throw C(Bi)}function pl(){if(dl())throw C(zi)}function Cs(){if(typeof window>"u")throw C(Wt)}function ys(r){if(!r)throw C(Qe)}function vo(r){Cs(),gl(),pl(),ys(r)}function lr(r,e){if(vo(r),ml(e.system.allowRedirectInIframe),e.cache.cacheLocation===x.MemoryStorage&&!e.cache.storeAuthStateInCookie)throw Eo(Io)}function Ts(r){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(r).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}function fl(){return te()}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Mt{navigateInternal(e,t){return Mt.defaultNavigateWindow(e,t)}navigateExternal(e,t){return Mt.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((n,o)=>{setTimeout(()=>{o(C(Nt,"failed_to_redirect"))},t.timeout)})}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Cl{async sendGetRequestAsync(e,t){let n,o={},i=0;const s=hr(t);try{n=await fetch(e,{method:or.GET,headers:s})}catch(a){throw je(C(window.navigator.onLine?Qi:Ot),void 0,void 0,a)}o=dr(n.headers);try{return i=n.status,{headers:o,body:await n.json(),status:i}}catch(a){throw je(C(Tn),i,o,a)}}async sendPostRequestAsync(e,t){const n=t&&t.body||"",o=hr(t);let i,s=0,a={};try{i=await fetch(e,{method:or.POST,headers:o,body:n})}catch(c){throw je(C(window.navigator.onLine?Vi:Ot),void 0,void 0,c)}a=dr(i.headers);try{return s=i.status,{headers:a,body:await i.json(),status:s}}catch(c){throw je(C(Tn),s,a,c)}}}function hr(r){try{const e=new Headers;if(!(r&&r.headers))return e;const t=r.headers;return Object.entries(t).forEach(([n,o])=>{e.append(n,o)}),e}catch(e){throw je(C(is),void 0,void 0,e)}}function dr(r){try{const e={};return r.forEach((t,n)=>{e[n]=t}),e}catch{throw C(ss)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */const yl=6e4,In=1e4,Tl=3e4,As=2e3;function Al({auth:r,cache:e,system:t,telemetry:n},o){const i={clientId:m.EMPTY_STRING,authority:`${m.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:m.EMPTY_STRING,authorityMetadata:m.EMPTY_STRING,redirectUri:typeof window<"u"?ce():"",postLogoutRedirectUri:m.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:z.AAD,OIDCOptions:{serverResponseType:Lt.FRAGMENT,defaultScopes:[m.OPENID_SCOPE,m.PROFILE_SCOPE,m.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:Dn.None,tenant:m.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1,encodeExtraQueryParams:!1},s={cacheLocation:x.SessionStorage,cacheRetentionDays:5,temporaryCacheLocation:x.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===x.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:P.Info,piiLoggingEnabled:!1},l={...{...ii,loggerOptions:a,networkClient:o?new Cl:Mc,navigationClient:new Mt,loadFrameTimeout:0,windowHashTimeout:t?.loadFrameTimeout||yl,iframeHashTimeout:t?.loadFrameTimeout||In,navigateFrameWait:0,redirectNavigationTimeout:Tl,asyncPopups:!1,allowRedirectInIframe:!1,allowPlatformBroker:!1,nativeBrokerHandshakeTimeout:t?.nativeBrokerHandshakeTimeout||As,pollIntervalMilliseconds:G.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:t?.loggerOptions||a},d={application:{appName:m.EMPTY_STRING,appVersion:m.EMPTY_STRING},client:new ri};if(r?.protocolMode!==z.OIDC&&r?.OIDCOptions&&new Ce(l.loggerOptions).warning(JSON.stringify(b(Wr))),r?.protocolMode&&r.protocolMode===z.OIDC&&l?.allowPlatformBroker)throw b(Yr);return{auth:{...i,...r,OIDCOptions:{...i.OIDCOptions,...r?.OIDCOptions}},cache:{...s,...e},system:l,telemetry:{...d,...n}}}/*! @azure/msal-browser v4.25.1 2025-10-17 */const Il="@azure/msal-browser",ke="4.25.1";/*! @azure/msal-browser v4.25.1 2025-10-17 */const U="msal",So="browser",cn="-",he=1,wn=1,wl=`${U}.${So}.log.level`,El=`${U}.${So}.log.pii`,kl=`${U}.${So}.platform.auth.dom`,ur=`${U}.version`,gr="account.keys",mr="token.keys";function ne(r=wn){return r<1?`${U}.${gr}`:`${U}.${r}.${gr}`}function Ie(r,e=he){return e<1?`${U}.${mr}.${r}`:`${U}.${e}.${mr}.${r}`}/*! @azure/msal-browser v4.25.1 2025-10-17 */class _o{static loggerCallback(e,t){switch(e){case P.Error:console.error(t);return;case P.Info:console.info(t);return;case P.Verbose:console.debug(t);return;case P.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){this.browserEnvironment=typeof window<"u",this.config=Al(e,this.browserEnvironment);let t;try{t=window[x.SessionStorage]}catch{}const n=t?.getItem(wl),o=t?.getItem(El)?.toLowerCase(),i=o==="true"?!0:o==="false"?!1:void 0,s={...this.config.system.loggerOptions},a=n&&Object.keys(P).includes(n)?P[n]:void 0;a&&(s.loggerCallback=_o.loggerCallback,s.logLevel=a),i!==void 0&&(s.piiLoggingEnabled=i),this.logger=new Ce(s,Il,ke),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class ve extends _o{getModuleName(){return ve.MODULE_NAME}getId(){return ve.ID}async initialize(){return this.available=typeof window<"u",this.available}}ve.MODULE_NAME="";ve.ID="StandardOperatingContext";/*! @azure/msal-browser v4.25.1 2025-10-17 */class vl{constructor(){this.dbName=An,this.version=Qc,this.tableName=Wc,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const i=o;this.db=i.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(C(mo)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(be));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(C(be));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);a.addEventListener("success",()=>{this.closeConnection(),n()}),a.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(be));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);s.addEventListener("success",()=>{this.closeConnection(),t()}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(C(be));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();i.addEventListener("success",s=>{const a=s;this.closeConnection(),e(a.target.result)}),i.addEventListener("error",s=>{this.closeConnection(),t(s)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(be));const s=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);s.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result===1)}),s.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(An),o=setTimeout(()=>t(!1),200);n.addEventListener("success",()=>(clearTimeout(o),e(!0))),n.addEventListener("blocked",()=>(clearTimeout(o),e(!0))),n.addEventListener("error",()=>(clearTimeout(o),t(!1)))})}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Jt{constructor(){this.cache=new Map}async initialize(){}getItem(e){return this.cache.get(e)||null}getUserData(e){return this.getItem(e)}setItem(e,t){this.cache.set(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}decryptData(){return Promise.resolve(null)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Sl{constructor(e){this.inMemoryCache=new Jt,this.indexedDBCache=new vl,this.logger=e}handleDatabaseAccessError(e){if(e instanceof rt&&e.errorCode===mo)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class le{constructor(e,t,n){this.logger=e,nl(n??!1),this.cache=new Sl(this.logger),this.performanceClient=t}createNewGuid(){return te()}base64Encode(e){return nt(e)}base64Decode(e){return X(e)}base64UrlEncode(e){return ut(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(h.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await rl(le.EXTRACTABLE,le.POP_KEY_USAGES),o=await an(n.publicKey),i={e:o.e,kty:o.kty,n:o.n},s=pr(i),a=await this.hashString(s),c=await an(n.privateKey),l=await il(c,!1,["sign"]);return await this.cache.setItem(a,{privateKey:l,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),a}async removeTokenBindingKey(e){if(await this.cache.removeItem(e),await this.cache.containsKey(e))throw p(Lr)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,n,o){const i=this.performanceClient?.startMeasurement(h.CryptoOptsSignJwt,o),s=await this.cache.getItem(t);if(!s)throw C(go);const a=await an(s.publicKey),c=pr(a),l=ut(JSON.stringify({kid:t})),d=co.getShrHeaderString({...n?.header,alg:a.alg,kid:l}),u=ut(d);e.cnf={jwk:JSON.parse(c)};const f=ut(JSON.stringify(e)),T=`${u}.${f}`,w=new TextEncoder().encode(T),O=await sl(s.privateKey,w),ie=ye(new Uint8Array(O)),j=`${T}.${ie}`;return i&&i.end({success:!0}),j}async hashString(e){return ms(e)}}le.POP_KEY_USAGES=["sign","verify"];le.EXTRACTABLE=!0;function pr(r){return JSON.stringify(r,Object.keys(r).sort())}/*! @azure/msal-browser v4.25.1 2025-10-17 */const _l=1440*60*1e3,En={Lax:"Lax",None:"None"};class Is{initialize(){return Promise.resolve()}getItem(e){const t=`${encodeURIComponent(e)}`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){const i=n[o],[s,...a]=decodeURIComponent(i).trim().split("="),c=a.join("=");if(s===t)return c}return""}getUserData(){throw p(E)}setItem(e,t,n,o=!0,i=En.Lax){let s=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=${i};`;if(n){const a=Rl(n);s+=`expires=${a};`}(o||i===En.None)&&(s+="Secure;"),document.cookie=s}async setUserData(){return Promise.reject(p(E))}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(n=>{const o=decodeURIComponent(n).trim().split("=");t.push(o[0])}),t}containsKey(e){return this.getKeys().includes(e)}decryptData(){return Promise.resolve(null)}}function Rl(r){const e=new Date;return new Date(e.getTime()+r*_l).toUTCString()}/*! @azure/msal-browser v4.25.1 2025-10-17 */function We(r,e){const t=r.getItem(ne(e));return t?JSON.parse(t):[]}function Ye(r,e,t){const n=e.getItem(Ie(r,t));if(n){const o=JSON.parse(n);if(o&&o.hasOwnProperty("idToken")&&o.hasOwnProperty("accessToken")&&o.hasOwnProperty("refreshToken"))return o}return{idToken:[],accessToken:[],refreshToken:[]}}/*! @azure/msal-browser v4.25.1 2025-10-17 */function kn(r){return r.hasOwnProperty("id")&&r.hasOwnProperty("nonce")&&r.hasOwnProperty("data")}/*! @azure/msal-browser v4.25.1 2025-10-17 */const fr="msal.cache.encryption",bl="msal.broadcast.cache";class Pl{constructor(e,t,n){if(!window.localStorage)throw Eo(Yt);this.memoryStorage=new Jt,this.initialized=!1,this.clientId=e,this.logger=t,this.performanceClient=n,this.broadcast=new BroadcastChannel(bl)}async initialize(e){const t=new Is,n=t.getItem(fr);let o={key:"",id:""};if(n)try{o=JSON.parse(n)}catch{}if(o.key&&o.id){const i=Q(fe,h.Base64Decode,this.logger,this.performanceClient,e)(o.key);this.encryptionCookie={id:o.id,key:await g(ar,h.GenerateHKDF,this.logger,this.performanceClient,e)(i)}}else{const i=te(),s=await g(us,h.GenerateBaseKey,this.logger,this.performanceClient,e)(),a=Q(ye,h.UrlEncodeArr,this.logger,this.performanceClient,e)(new Uint8Array(s));this.encryptionCookie={id:i,key:await g(ar,h.GenerateHKDF,this.logger,this.performanceClient,e)(s)};const c={id:i,key:a};t.setItem(fr,JSON.stringify(c),0,!0,En.None)}await g(this.importExistingCache.bind(this),h.ImportExistingCache,this.logger,this.performanceClient,e)(e),this.broadcast.addEventListener("message",this.updateCache.bind(this)),this.initialized=!0}getItem(e){return window.localStorage.getItem(e)}getUserData(e){if(!this.initialized)throw C(Qe);return this.memoryStorage.getItem(e)}async decryptData(e,t,n){if(!this.initialized||!this.encryptionCookie)throw C(Qe);if(t.id!==this.encryptionCookie.id)return this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},n),null;const o=await g(cr,h.Decrypt,this.logger,this.performanceClient,n)(this.encryptionCookie.key,t.nonce,this.getContext(e),t.data);if(!o)return null;try{return JSON.parse(o)}catch{return this.performanceClient.incrementFields({encryptedCacheCorruptionCount:1},n),null}}setItem(e,t){window.localStorage.setItem(e,t)}async setUserData(e,t,n,o){if(!this.initialized||!this.encryptionCookie)throw C(Qe);const{data:i,nonce:s}=await g(ll,h.Encrypt,this.logger,this.performanceClient,n)(this.encryptionCookie.key,t,this.getContext(e)),a={id:this.encryptionCookie.id,nonce:s,data:i,lastUpdatedAt:o};this.memoryStorage.setItem(e,t),this.setItem(e,JSON.stringify(a)),this.broadcast.postMessage({key:e,value:t,context:this.getContext(e)})}removeItem(e){this.memoryStorage.containsKey(e)&&(this.memoryStorage.removeItem(e),this.broadcast.postMessage({key:e,value:null,context:this.getContext(e)})),window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}clear(){this.memoryStorage.clear(),We(this).forEach(n=>this.removeItem(n));const t=Ye(this.clientId,this);t.idToken.forEach(n=>this.removeItem(n)),t.accessToken.forEach(n=>this.removeItem(n)),t.refreshToken.forEach(n=>this.removeItem(n)),this.getKeys().forEach(n=>{(n.startsWith(U)||n.indexOf(this.clientId)!==-1)&&this.removeItem(n)})}async importExistingCache(e){if(!this.encryptionCookie)return;let t=We(this);t=await this.importArray(t,e),t.length?this.setItem(ne(),JSON.stringify(t)):this.removeItem(ne());const n=Ye(this.clientId,this);n.idToken=await this.importArray(n.idToken,e),n.accessToken=await this.importArray(n.accessToken,e),n.refreshToken=await this.importArray(n.refreshToken,e),n.idToken.length||n.accessToken.length||n.refreshToken.length?this.setItem(Ie(this.clientId),JSON.stringify(n)):this.removeItem(Ie(this.clientId))}async getItemFromEncryptedCache(e,t){if(!this.encryptionCookie)return null;const n=this.getItem(e);if(!n)return null;let o;try{o=JSON.parse(n)}catch{return null}return kn(o)?o.id!==this.encryptionCookie.id?(this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},t),null):g(cr,h.Decrypt,this.logger,this.performanceClient,t)(this.encryptionCookie.key,o.nonce,this.getContext(e),o.data):(this.performanceClient.incrementFields({unencryptedCacheCount:1},t),o)}async importArray(e,t){const n=[],o=[];return e.forEach(i=>{const s=this.getItemFromEncryptedCache(i,t).then(a=>{a?(this.memoryStorage.setItem(i,a),n.push(i)):this.removeItem(i)});o.push(s)}),await Promise.all(o),n}getContext(e){let t="";return e.includes(this.clientId)&&(t=this.clientId),t}updateCache(e){this.logger.trace("Updating internal cache from broadcast event");const t=this.performanceClient.startMeasurement(h.LocalStorageUpdated);t.add({isBackground:!0});const{key:n,value:o,context:i}=e.data;if(!n){this.logger.error("Broadcast event missing key"),t.end({success:!1,errorCode:"noKey"});return}if(i&&i!==this.clientId){this.logger.trace(`Ignoring broadcast event from clientId: ${i}`),t.end({success:!1,errorCode:"contextMismatch"});return}o?(this.memoryStorage.setItem(n,o),this.logger.verbose("Updated item in internal cache")):(this.memoryStorage.removeItem(n),this.logger.verbose("Removed item from internal cache")),t.end({success:!0})}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Ol{constructor(){if(!window.sessionStorage)throw Eo(Yt)}async initialize(){}getItem(e){return window.sessionStorage.getItem(e)}getUserData(e){return this.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}decryptData(){return Promise.resolve(null)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */const A={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache",BROKER_CONNECTION_ESTABLISHED:"msal:brokerConnectionEstablished"};/*! @azure/msal-browser v4.25.1 2025-10-17 */function Cr(r,e){const t=r.indexOf(e);t>-1&&r.splice(t,1)}/*! @azure/msal-browser v4.25.1 2025-10-17 */class vn extends fn{constructor(e,t,n,o,i,s,a){super(e,n,o,i,a),this.cacheConfig=t,this.logger=o,this.internalStorage=new Jt,this.browserStorage=yr(e,t.cacheLocation,o,i),this.temporaryCacheStorage=yr(e,t.temporaryCacheLocation,o,i),this.cookieStorage=new Is,this.eventHandler=s}async initialize(e){this.performanceClient.addFields({cacheLocation:this.cacheConfig.cacheLocation,cacheRetentionDays:this.cacheConfig.cacheRetentionDays},e),await this.browserStorage.initialize(e),await this.migrateExistingCache(e),this.trackVersionChanges(e)}async migrateExistingCache(e){const t=We(this.browserStorage,0),n=Ye(this.clientId,this.browserStorage,0);this.performanceClient.addFields({oldAccountCount:t.length,oldAccessCount:n.accessToken.length,oldIdCount:n.idToken.length,oldRefreshCount:n.refreshToken.length},e);const o=We(this.browserStorage,1),i=Ye(this.clientId,this.browserStorage,1);this.performanceClient.addFields({currAccountCount:o.length,currAccessCount:i.accessToken.length,currIdCount:i.idToken.length,currRefreshCount:i.refreshToken.length},e),await Promise.all([this.updateV0ToCurrent(wn,t,o,e),this.updateV0ToCurrent(he,n.idToken,i.idToken,e),this.updateV0ToCurrent(he,n.accessToken,i.accessToken,e),this.updateV0ToCurrent(he,n.refreshToken,i.refreshToken,e)]),t.length>0?this.browserStorage.setItem(ne(0),JSON.stringify(t)):this.browserStorage.removeItem(ne(0)),o.length>0?this.browserStorage.setItem(ne(1),JSON.stringify(o)):this.browserStorage.removeItem(ne(1)),this.setTokenKeys(n,e,0),this.setTokenKeys(i,e,1)}async updateV0ToCurrent(e,t,n,o){const i=[];for(const s of[...t]){const a=this.browserStorage.getItem(s),c=this.validateAndParseJson(a||"");if(!c){Cr(t,s);continue}c.lastUpdatedAt||(c.lastUpdatedAt=Date.now().toString(),this.setItem(s,JSON.stringify(c),o));const l=kn(c)?await this.browserStorage.decryptData(s,c,o):c;let d;if(l&&(Yo(l)||Jo(l))&&(d=l.expiresOn),!l||gc(c.lastUpdatedAt,this.cacheConfig.cacheRetentionDays)||d&&Rt(d,Ir)){this.browserStorage.removeItem(s),Cr(t,s),this.performanceClient.incrementFields({expiredCacheRemovedCount:1},o);continue}if(this.cacheConfig.cacheLocation!==x.LocalStorage||kn(c)){const u=`${U}.${e}${cn}${s}`,f=this.browserStorage.getItem(u);if(f){const T=this.validateAndParseJson(f);if(Number(c.lastUpdatedAt)>Number(T.lastUpdatedAt)){i.push(this.setUserData(u,JSON.stringify(l),o,c.lastUpdatedAt).then(()=>{this.performanceClient.incrementFields({updatedCacheFromV0Count:1},o)}));continue}}else{i.push(this.setUserData(u,JSON.stringify(l),o,c.lastUpdatedAt).then(()=>{n.push(u),this.performanceClient.incrementFields({upgradedCacheCount:1},o)}));continue}}}return Promise.all(i)}trackVersionChanges(e){const t=this.browserStorage.getItem(ur);t&&(this.logger.info(`MSAL.js was last initialized by version: ${t}`),this.performanceClient.addFields({previousLibraryVersion:t},e)),t!==ke&&this.setItem(ur,ke,e)}validateAndParseJson(e){if(!e)return null;try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}setItem(e,t,n){let o=0,i=[];const s=20;for(let a=0;a<=s;a++)try{this.browserStorage.setItem(e,t),a>0&&(a<=o?this.removeAccessTokenKeys(i.slice(0,a),n,0):(this.removeAccessTokenKeys(i.slice(0,o),n,0),this.removeAccessTokenKeys(i.slice(o,a),n)));break}catch(c){const l=pn(c);if(l.errorCode===Et&&a<s){if(!i.length){const d=e===Ie(this.clientId,0)?JSON.parse(t).accessToken:this.getTokenKeys(0).accessToken,u=e===Ie(this.clientId)?JSON.parse(t).accessToken:this.getTokenKeys().accessToken;i=[...d,...u],o=d.length}if(i.length<=a)throw l;this.removeAccessToken(i[a],n,!1)}else throw l}}async setUserData(e,t,n,o){let i=0,s=[];const a=20;for(let c=0;c<=a;c++)try{await g(this.browserStorage.setUserData.bind(this.browserStorage),h.SetUserData,this.logger,this.performanceClient)(e,t,n,o),c>0&&(c<=i?this.removeAccessTokenKeys(s.slice(0,c),n,0):(this.removeAccessTokenKeys(s.slice(0,i),n,0),this.removeAccessTokenKeys(s.slice(i,c),n)));break}catch(l){const d=pn(l);if(d.errorCode===Et&&c<a){if(!s.length){const u=this.getTokenKeys(0).accessToken,f=this.getTokenKeys().accessToken;s=[...u,...f],i=u.length}if(s.length<=c)throw d;this.removeAccessToken(s[c],n,!1)}else throw d}}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.browserStorage.getUserData(e);if(!n)return this.removeAccountKeyFromMap(e,t),null;const o=this.validateAndParseJson(n);return!o||!Z.isAccountEntity(o)?null:fn.toObject(new Z,o)}async setAccount(e,t){this.logger.trace("BrowserCacheManager.setAccount called");const n=this.generateAccountKey(e.getAccountInfo()),o=Date.now().toString();e.lastUpdatedAt=o,await this.setUserData(n,JSON.stringify(e),t,o);const i=this.addAccountKeyToMap(n,t);this.cacheConfig.cacheLocation===x.LocalStorage&&i&&this.eventHandler.emitEvent(A.ACCOUNT_ADDED,void 0,e.getAccountInfo())}getAccountKeys(){return We(this.browserStorage)}addAccountKeyToMap(e,t){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const n=this.getAccountKeys();return n.indexOf(e)===-1?(n.push(e),this.setItem(ne(),JSON.stringify(n),t),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added"),!0):(this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map"),!1)}removeAccountKeyFromMap(e,t){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const n=this.getAccountKeys(),o=n.indexOf(e);if(o>-1){if(n.splice(o,1),n.length===0){this.removeItem(ne());return}else this.setItem(ne(),JSON.stringify(n),t);this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")}else this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}removeAccount(e,t){const n=this.getActiveAccount(t);n?.homeAccountId===e.homeAccountId&&n?.environment===e.environment&&this.setActiveAccount(null,t),super.removeAccount(e,t),this.removeAccountKeyFromMap(this.generateAccountKey(e),t),this.browserStorage.getKeys().forEach(o=>{o.includes(e.homeAccountId)&&o.includes(e.environment)&&this.browserStorage.removeItem(o)}),this.cacheConfig.cacheLocation===x.LocalStorage&&this.eventHandler.emitEvent(A.ACCOUNT_REMOVED,void 0,e)}removeIdToken(e,t){super.removeIdToken(e,t);const n=this.getTokenKeys(),o=n.idToken.indexOf(e);o>-1&&(this.logger.info("idToken removed from tokenKeys map"),n.idToken.splice(o,1),this.setTokenKeys(n,t))}removeAccessToken(e,t,n=!0){super.removeAccessToken(e,t),n&&this.removeAccessTokenKeys([e],t)}removeAccessTokenKeys(e,t,n=he){this.logger.trace("removeAccessTokenKey called");const o=this.getTokenKeys(n);let i=0;if(e.forEach(s=>{const a=o.accessToken.indexOf(s);a>-1&&(o.accessToken.splice(a,1),i++)}),i>0){this.logger.info(`removed ${i} accessToken keys from tokenKeys map`),this.setTokenKeys(o,t,n);return}}removeRefreshToken(e,t){super.removeRefreshToken(e,t);const n=this.getTokenKeys(),o=n.refreshToken.indexOf(e);o>-1&&(this.logger.info("refreshToken removed from tokenKeys map"),n.refreshToken.splice(o,1),this.setTokenKeys(n,t))}getTokenKeys(e=he){return Ye(this.clientId,this.browserStorage,e)}setTokenKeys(e,t,n=he){if(e.idToken.length===0&&e.accessToken.length===0&&e.refreshToken.length===0){this.removeItem(Ie(this.clientId,n));return}else this.setItem(Ie(this.clientId,n),JSON.stringify(e),t)}getIdTokenCredential(e,t){const n=this.browserStorage.getUserData(e);if(!n)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeIdToken(e,t),null;const o=this.validateAndParseJson(n);return!o||!pc(o)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),o)}async setIdTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const n=this.generateCredentialKey(e),o=Date.now().toString();e.lastUpdatedAt=o,await this.setUserData(n,JSON.stringify(e),t,o);const i=this.getTokenKeys();i.idToken.indexOf(n)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),i.idToken.push(n),this.setTokenKeys(i,t))}getAccessTokenCredential(e,t){const n=this.browserStorage.getUserData(e);if(!n)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeAccessTokenKeys([e],t),null;const o=this.validateAndParseJson(n);return!o||!Yo(o)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),o)}async setAccessTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const n=this.generateCredentialKey(e),o=Date.now().toString();e.lastUpdatedAt=o,await this.setUserData(n,JSON.stringify(e),t,o);const i=this.getTokenKeys(),s=i.accessToken.indexOf(n);s!==-1&&i.accessToken.splice(s,1),this.logger.trace(`access token ${s===-1?"added to":"updated in"} map`),i.accessToken.push(n),this.setTokenKeys(i,t)}getRefreshTokenCredential(e,t){const n=this.browserStorage.getUserData(e);if(!n)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeRefreshToken(e,t),null;const o=this.validateAndParseJson(n);return!o||!Jo(o)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),o)}async setRefreshTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const n=this.generateCredentialKey(e),o=Date.now().toString();e.lastUpdatedAt=o,await this.setUserData(n,JSON.stringify(e),t,o);const i=this.getTokenKeys();i.refreshToken.indexOf(n)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),i.refreshToken.push(n),this.setTokenKeys(i,t))}getAppMetadata(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Tc(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e,t){this.logger.trace("BrowserCacheManager.setAppMetadata called");const n=yc(e);this.setItem(n,JSON.stringify(e),t)}getServerTelemetry(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!fc(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t,n){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t),n)}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&Ac(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(dt.WRAPPER_SKU,e),this.internalStorage.setItem(dt.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(dt.WRAPPER_SKU)||m.EMPTY_STRING,t=this.internalStorage.getItem(dt.WRAPPER_VER)||m.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(e){const t=this.generateCacheKey(Lo.ACTIVE_ACCOUNT_FILTERS),n=this.browserStorage.getItem(t);if(!n)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters found"),null;const o=this.validateAndParseJson(n);return o?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:o.homeAccountId,localAccountId:o.localAccountId,tenantId:o.tenantId},e)):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e,t){const n=this.generateCacheKey(Lo.ACTIVE_ACCOUNT_FILTERS);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId,lastUpdatedAt:q().toString()};this.setItem(n,JSON.stringify(o),t)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(n);this.eventHandler.emitEvent(A.ACTIVE_ACCOUNT_CHANGED)}getThrottlingCache(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Cc(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t,n){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t),n)}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const i=this.cookieStorage.getItem(n);if(i)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),i}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===x.LocalStorage){const i=this.browserStorage.getItem(n);if(i)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),i}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(o,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}clear(e){this.removeAllAccounts(e),this.removeAppMetadata(e),this.temporaryCacheStorage.getKeys().forEach(t=>{(t.indexOf(U)!==-1||t.indexOf(this.clientId)!==-1)&&this.removeTemporaryItem(t)}),this.browserStorage.getKeys().forEach(t=>{(t.indexOf(U)!==-1||t.indexOf(this.clientId)!==-1)&&this.browserStorage.removeItem(t)}),this.internalStorage.clear()}clearTokensAndKeysWithClaims(e){this.performanceClient.addQueueMeasurement(h.ClearTokensAndKeysWithClaims,e);const t=this.getTokenKeys();let n=0;t.accessToken.forEach(o=>{const i=this.getAccessTokenCredential(o,e);i?.requestedClaimsHash&&o.includes(i.requestedClaimsHash.toLowerCase())&&(this.removeAccessToken(o,e),n++)}),n>0&&this.logger.warning(`${n} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return V.startsWith(e,U)?e:`${U}.${this.clientId}.${e}`}generateCredentialKey(e){const t=e.credentialType===L.REFRESH_TOKEN&&e.familyId||e.clientId,n=e.tokenType&&e.tokenType.toLowerCase()!==S.BEARER.toLowerCase()?e.tokenType.toLowerCase():"";return[`${U}.${he}`,e.homeAccountId,e.environment,e.credentialType,t,e.realm||"",e.target||"",e.requestedClaimsHash||"",n].join(cn).toLowerCase()}generateAccountKey(e){const t=e.homeAccountId.split(".")[1];return[`${U}.${wn}`,e.homeAccountId,e.environment,t||e.tenantId||""].join(cn).toLowerCase()}resetRequestCache(){this.logger.trace("BrowserCacheManager.resetRequestCache called"),this.removeTemporaryItem(this.generateCacheKey(N.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(N.VERIFIER)),this.removeTemporaryItem(this.generateCacheKey(N.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(N.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(N.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cacheAuthorizeRequest(e,t){this.logger.trace("BrowserCacheManager.cacheAuthorizeRequest called");const n=nt(JSON.stringify(e));if(this.setTemporaryCache(N.REQUEST_PARAMS,n,!0),t){const o=nt(t);this.setTemporaryCache(N.VERIFIER,o,!0)}}getCachedRequest(){this.logger.trace("BrowserCacheManager.getCachedRequest called");const e=this.getTemporaryCache(N.REQUEST_PARAMS,!0);if(!e)throw C(ji);const t=this.getTemporaryCache(N.VERIFIER,!0);let n,o="";try{n=JSON.parse(X(e)),t&&(o=X(t))}catch(i){throw this.logger.errorPii(`Attempted to parse: ${e}`),this.logger.error(`Parsing cached token request threw with error: ${i}`),C($i)}return[n,o]}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(N.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress()?.clientId;return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${U}.${N.INTERACTION_STATUS_KEY}`,t=this.getTemporaryCache(e,!1);try{return t?JSON.parse(t):null}catch{return this.logger.error("Cannot parse interaction status. Removing temporary cache items and clearing url hash. Retrying interaction should fix the error"),this.removeTemporaryItem(e),this.resetRequestCache(),fs(window),null}}setInteractionInProgress(e,t=de.SIGNIN){const n=`${U}.${N.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw C(Li);this.setTemporaryCache(n,JSON.stringify({clientId:this.clientId,type:t}),!1)}else!e&&this.getInteractionInProgress()?.clientId===this.clientId&&this.removeTemporaryItem(n)}async hydrateCache(e,t){const n=Gt(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const i=zt(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?Wo(e.expiresOn):0,e.extExpiresOn?Wo(e.extExpiresOn):0,X,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),s={idToken:n,accessToken:i};return this.saveCacheRecord(s,e.correlationId)}async saveCacheRecord(e,t,n){try{await super.saveCacheRecord(e,t,n)}catch(o){if(o instanceof Oe&&this.performanceClient&&t)try{const i=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:i.refreshToken.length,cacheIdCount:i.idToken.length,cacheAtCount:i.accessToken.length},t)}catch{}throw o}}}function yr(r,e,t,n){try{switch(e){case x.LocalStorage:return new Pl(r,t,n);case x.SessionStorage:return new Ol;case x.MemoryStorage:default:break}}catch(o){t.error(o)}return new Jt}const Nl=(r,e,t,n)=>{const o={cacheLocation:x.MemoryStorage,cacheRetentionDays:5,temporaryCacheLocation:x.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new vn(r,o,At,e,t,n)};/*! @azure/msal-browser v4.25.1 2025-10-17 */function Ml(r,e,t,n,o){return r.verbose("getAllAccounts called"),t?e.getAllAccounts(o||{},n):[]}function xl(r,e,t,n){const o=t.getAccountInfoFilteredBy(r,n);return o?(e.verbose("getAccount: Account matching provided filter found, returning"),o):(e.verbose("getAccount: No matching account found, returning null"),null)}function Ul(r,e,t,n){if(e.trace("getAccountByUsername called"),!r)return e.warning("getAccountByUsername: No username provided"),null;const o=t.getAccountInfoFilteredBy({username:r},n);return o?(e.verbose("getAccountByUsername: Account matching username found, returning"),e.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${r}`),o):(e.verbose("getAccountByUsername: No matching account found, returning null"),null)}function Dl(r,e,t,n){if(e.trace("getAccountByHomeId called"),!r)return e.warning("getAccountByHomeId: No homeAccountId provided"),null;const o=t.getAccountInfoFilteredBy({homeAccountId:r},n);return o?(e.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),e.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${r}`),o):(e.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function Ll(r,e,t,n){if(e.trace("getAccountByLocalId called"),!r)return e.warning("getAccountByLocalId: No localAccountId provided"),null;const o=t.getAccountInfoFilteredBy({localAccountId:r},n);return o?(e.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),e.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${r}`),o):(e.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function Hl(r,e,t){e.setActiveAccount(r,t)}function Fl(r,e){return r.getActiveAccount(e)}/*! @azure/msal-browser v4.25.1 2025-10-17 */const Kl="msal.broadcast.event";class Bl{constructor(e){this.eventCallbacks=new Map,this.logger=e||new Ce({}),typeof BroadcastChannel<"u"&&(this.broadcastChannel=new BroadcastChannel(Kl)),this.invokeCrossTabCallbacks=this.invokeCrossTabCallbacks.bind(this)}addEventCallback(e,t,n){if(typeof window<"u"){const o=n||fl();return this.eventCallbacks.has(o)?(this.logger.error(`Event callback with id: ${o} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(o,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${o}`),o)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,n,o){const i={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};switch(e){case A.ACCOUNT_ADDED:case A.ACCOUNT_REMOVED:case A.ACTIVE_ACCOUNT_CHANGED:this.broadcastChannel?.postMessage(i);break;default:this.invokeCallbacks(i);break}}invokeCallbacks(e){this.eventCallbacks.forEach(([t,n],o)=>{(n.length===0||n.includes(e.eventType))&&(this.logger.verbose(`Emitting event to callback ${o}: ${e.eventType}`),t.apply(null,[e]))})}invokeCrossTabCallbacks(e){const t=e.data;this.invokeCallbacks(t)}subscribeCrossTab(){this.broadcastChannel?.addEventListener("message",this.invokeCrossTabCallbacks)}unsubscribeCrossTab(){this.broadcastChannel?.removeEventListener("message",this.invokeCrossTabCallbacks)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class ws{constructor(e,t,n,o,i,s,a,c,l){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=i,this.navigationClient=s,this.platformAuthProvider=c,this.correlationId=l||te(),this.logger=o.clone(G.MSAL_SKU,ke,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e,t){if(t)try{this.browserStorage.removeAccount(t,e),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),this.browserStorage.clear(e),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return v.getAbsoluteUrl(t,ce())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new et(n,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,n=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const o={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.requestAuthority||this.config.auth.authority,s=n?.length?n==="true":this.config.auth.instanceAware,a=t&&s?this.config.auth.authority.replace(v.getDomainFromUrl(i),t.environment):i,c=F.generateAuthority(a,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),l=await g(wi,h.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(c,this.config.system.networkClient,this.browserStorage,o,this.logger,this.correlationId,this.performanceClient);if(t&&!l.isAlias(t.environment))throw b(Jr);return l}}/*! @azure/msal-browser v4.25.1 2025-10-17 */async function Ro(r,e,t,n){t.addQueueMeasurement(h.InitializeBaseRequest,r.correlationId);const o=r.authority||e.auth.authority,i=[...r&&r.scopes||[]],s={...r,correlationId:r.correlationId,authority:o,scopes:i};if(!s.authenticationScheme)s.authenticationScheme=S.BEARER,n.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(s.authenticationScheme===S.SSH){if(!r.sshJwk)throw b(Ht);if(!r.sshKid)throw b(Qr)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}return e.cache.claimsBasedCachingEnabled&&r.claims&&!V.isEmptyObj(r.claims)&&(s.requestedClaimsHash=await ms(r.claims)),s}async function Gl(r,e,t,n,o){n.addQueueMeasurement(h.InitializeSilentRequest,r.correlationId);const i=await g(Ro,h.InitializeBaseRequest,o,n,r.correlationId)(r,t,n,o);return{...r,...i,account:e,forceRefresh:r.forceRefresh||!1}}function Es(r,e){let t;const n=r.httpMethod;if(e===z.EAR){if(t=n||Ae.POST,t!==Ae.POST)throw b(Xr)}else t=n||Ae.GET;if(r.authorizePostBodyParameters&&t!==Ae.POST)throw b(Zr);return t}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Ke extends ws{initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||te(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=v.getAbsoluteUrl(e.postLogoutRedirectUri,ce())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=v.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,ce())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=v.getAbsoluteUrl(ce(),ce())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await g(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new _i(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}=e;this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetClientConfiguration,this.correlationId);const a=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:a,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:G.MSAL_SKU,version:ke,cpu:m.EMPTY_STRING,os:m.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},i=He.setRequestState(this.browserCrypto,e&&e.state||m.EMPTY_STRING,o),a={...await g(Ro,h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:i,nonce:e.nonce||te(),responseMode:this.config.auth.OIDCOptions.serverResponseType},c={...a,httpMethod:Es(a,this.config.auth.protocolMode)};if(e.loginHint||e.sid)return c;const l=e.account||this.browserStorage.getActiveAccount(this.correlationId);return l&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${l.homeAccountId}`,this.correlationId),c.account=l),c}}/*! @azure/msal-browser v4.25.1 2025-10-17 */function zl(r,e){if(!e)return null;try{return He.parseRequestState(r,e).libraryState.meta}catch{throw p(xe)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */function Je(r,e,t){const n=It(r);if(!n)throw ti(r)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${r}`),C(xi)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),C(Mi));return n}function ql(r,e,t){if(!r.state)throw C(uo);const n=zl(e,r.state);if(!n)throw C(Ui);if(n.interactionType!==t)throw C(Di)}/*! @azure/msal-browser v4.25.1 2025-10-17 */class ks{constructor(e,t,n,o,i){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=i}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(h.HandleCodeResponse,t.correlationId);let n;try{n=Uc(e,t.state)}catch(o){throw o instanceof Se&&o.subError===tt?C(tt):o}return g(this.handleCodeResponseFromServer.bind(this),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(h.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await g(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const i=this.createCcsCredentials(t);i&&(this.authCodeRequest.ccsCredential=i)}return await g(this.authModule.acquireToken.bind(this.authModule),h.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:J.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:J.UPN}:null}}/*! @azure/msal-browser v4.25.1 2025-10-17 */const jl="ContentError",$l="PageException",vs="user_switch";/*! @azure/msal-browser v4.25.1 2025-10-17 */const Vl="USER_INTERACTION_REQUIRED",Ql="USER_CANCEL",Wl="NO_NETWORK",Yl="DISABLED",Jl="ACCOUNT_UNAVAILABLE",Xl="UX_NOT_ALLOWED";/*! @azure/msal-browser v4.25.1 2025-10-17 */const Zl=-2147186943,eh={[vs]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class re extends R{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,re.prototype),this.name="NativeAuthError",this.ext=n}}function Pe(r){if(r.ext&&r.ext.status&&r.ext.status===Yl||r.ext&&r.ext.error&&r.ext.error===Zl)return!0;switch(r.errorCode){case jl:case $l:return!0;default:return!1}}function xt(r,e,t){if(t&&t.status)switch(t.status){case Jl:return Pt(ki);case Vl:return new ee(r,e);case Ql:return C(tt);case Wl:return C(Ot);case Xl:return Pt(ro)}return new re(r,eh[r]||e,t)}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Ss extends Ke{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(_.acquireTokenSilent_silentFlow),n=await g(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),o=new Nc(n,this.performanceClient);this.logger.verbose("Silent auth client created");try{const s=(await g(o.acquireCachedToken.bind(o),h.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),s}catch(i){throw i instanceof rt&&i.errorCode===go&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),i}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t.correlationId,t?.account)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class ft extends ws{constructor(e,t,n,o,i,s,a,c,l,d,u,f){super(e,t,n,o,i,s,c,l,f),this.apiId=a,this.accountId=d,this.platformAuthProvider=l,this.nativeStorageManager=u,this.silentCacheClient=new Ss(e,this.nativeStorageManager,n,o,i,s,c,l,f);const T=this.platformAuthProvider.getExtensionName();this.skus=et.makeExtraSkuString({libraryName:G.MSAL_SKU,libraryVersion:ke,extensionName:T,extensionVersion:this.platformAuthProvider.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[Va]:this.skus}}async acquireToken(e,t){this.performanceClient.addQueueMeasurement(h.NativeInteractionClientAcquireToken,this.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const n=this.performanceClient.startMeasurement(h.NativeInteractionClientAcquireToken,this.correlationId),o=q(),i=this.initializeServerTelemetryManager(this.apiId);try{const s=await this.initializeNativeRequest(e);try{const c=await this.acquireTokensFromCache(this.accountId,s);return n.end({success:!0,isNativeBroker:!1,fromCache:!0}),c}catch(c){if(t===K.AccessToken)throw this.logger.info("MSAL internal Cache does not contain tokens, return error as per cache policy"),n.end({success:!1,brokerErrorCode:"cache_request_failed"}),c;this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const a=await this.platformAuthProvider.sendMessage(s);return await this.handleNativeResponse(a,s,o).then(c=>(n.end({success:!0,isNativeBroker:!0,requestId:c.requestId}),i.clearNativeBrokerErrorCode(),c)).catch(c=>{throw n.end({success:!1,errorCode:c.errorCode,subErrorCode:c.subError}),c})}catch(s){throw s instanceof re&&i.setNativeBrokerErrorCode(s.errorCode),n.end({success:!1}),s}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:M.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),p(gn);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e},this.correlationId);if(!n)throw p(gn);try{const o=this.createSilentCacheRequest(t,n),i=await this.silentCacheClient.acquireToken(o),s={...n,idTokenClaims:i?.idTokenClaims,idToken:i?.idToken};return{...i,account:s}}catch(o){throw o}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...n}=e;delete n.onRedirectNavigate;const o=await this.initializeNativeRequest(n);try{await this.platformAuthProvider.sendMessage(o)}catch(a){if(a instanceof re&&(this.initializeServerTelemetryManager(this.apiId).setNativeBrokerErrorCode(a.errorCode),Pe(a)))throw a}this.browserStorage.setTemporaryCache(N.NATIVE_REQUEST,JSON.stringify(o),!0);const i={apiId:_.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(s,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:o,...i}=n;o&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(N.NATIVE_REQUEST));const s=q();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const a=await this.platformAuthProvider.sendMessage(i),c=await this.handleNativeResponse(a,i,s);return this.initializeServerTelemetryManager(this.apiId).clearNativeBrokerErrorCode(),e&&this.correlationId&&this.performanceClient.addFields({isNativeBroker:!0},this.correlationId),c}catch(a){throw a}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const o=Le(e.id_token,X),i=this.createHomeAccountIdentifier(e,o),s=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId},this.correlationId)?.homeAccountId;if(t.extraParameters?.child_client_id&&e.account.id!==t.accountId)this.logger.info("handleNativeServerResponse: Double broker flow detected, ignoring accountId mismatch");else if(i!==s&&e.account.id!==t.accountId)throw xt(vs);const a=await this.getDiscoveredAuthority({requestAuthority:t.authority}),c=io(this.browserStorage,a,i,X,this.correlationId,o,e.client_info,void 0,o.tid,void 0,e.account.id,this.logger);e.expires_in=Number(e.expires_in);const l=await this.generateAuthenticationResult(e,t,o,c,a.canonicalAuthority,n);return await this.cacheAccount(c,this.correlationId),await this.cacheNativeTokens(e,t,i,o,e.access_token,l.tenantId,n),l}createHomeAccountIdentifier(e,t){return Z.generateHomeAccountId(e.client_info||m.EMPTY_STRING,Y.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return t?M.fromString(t):M.fromString(e)}async generatePopAccessToken(e,t){if(t.tokenType===S.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Ue(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw p(Mn);return n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,i,s){const a=this.addTelemetryFromNativeResponse(e.properties.MATS),c=this.generateScopes(t.scope,e.scope),l=e.account.properties||{},d=l.UID||n.oid||n.sub||m.EMPTY_STRING,u=l.TenantId||n.tid||m.EMPTY_STRING,f=Gn(o.getAccountInfo(),void 0,n,e.id_token);f.nativeAccountId!==e.account.id&&(f.nativeAccountId=e.account.id);const T=await this.generatePopAccessToken(e,t),k=t.tokenType===S.POP?S.POP:S.BEARER;return{authority:i,uniqueId:d,tenantId:u,scopes:c.asArray(),account:f,idToken:e.id_token,idTokenClaims:n,accessToken:T,fromCache:a?this.isResponseFromCache(a):!1,expiresOn:Me(s+e.expires_in),tokenType:k,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}async cacheAccount(e,t){await this.browserStorage.setAccount(e,this.correlationId),this.browserStorage.removeAccountContext(e.getAccountInfo(),t)}cacheNativeTokens(e,t,n,o,i,s,a){const c=Gt(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=t.tokenType===S.POP?m.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,d=a+l,u=this.generateScopes(e.scope,t.scope),f=zt(n,t.authority,i,t.clientId,o.tid||s,u.printScopes(),d,0,X,void 0,t.tokenType,void 0,t.keyId),T={idToken:c,accessToken:f};return this.nativeStorageManager.saveCacheRecord(T,this.correlationId,t.storeInCache)}getExpiresInValue(e,t){return e===S.POP?m.SHR_NONCE_VALIDITY:(typeof t=="string"?parseInt(t,10):t)||0}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.platformAuthProvider.getExtensionId(),extensionVersion:this.platformAuthProvider.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}getMATSFromResponse(e){if(e)try{return JSON.parse(e)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=await this.getCanonicalAuthority(e),{scopes:n,...o}=e,i=new M(n||[]);i.appendScopes(De);const s={...o,accountId:this.accountId,clientId:this.config.auth.clientId,authority:t.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:this.getPrompt(e.prompt),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw C(rs);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry=W.MATS_TELEMETRY,e.authenticationScheme===S.POP){const a={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},c=new Ue(this.browserCrypto);let l;if(s.keyId)l=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{const d=await g(c.generateCnf.bind(c),h.PopTokenGenerateCnf,this.logger,this.performanceClient,this.correlationId)(a,this.logger);l=d.reqCnfString,s.keyId=d.kid,s.signPopToken=!0}s.reqCnf=l}return this.addRequestSKUs(s),s}async getCanonicalAuthority(e){const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new v(t);return n.validateAsUri(),n}getPrompt(e){switch(this.apiId){case _.ssoSilent:case _.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),H.NONE}if(!e){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e){case H.NONE:case H.CONSENT:case H.LOGIN:case H.SELECT_ACCOUNT:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e} is not compatible with native flow`),C(ns)}}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(vt)&&e.extraParameters.hasOwnProperty(St)&&e.extraParameters.hasOwnProperty(we);if(!e.embeddedClientId&&!t)return;let n="";const o=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,n=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[St],n=e.extraParameters[we]),e.extraParameters={child_client_id:n,child_redirect_uri:o},this.performanceClient?.addFields({embeddedClientId:n,embeddedRedirectUri:o},this.correlationId)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */async function bo(r,e,t,n,o){const i=xc({...r.auth,authority:e},t,n,o);if(Jn(i,{sku:G.MSAL_SKU,version:ke,os:"",cpu:""}),r.auth.protocolMode!==z.OIDC&&Xn(i,r.telemetry.application),t.platformBroker&&(Ja(i),o.addFields({isPlatformAuthorizeRequest:!0},t.correlationId),t.authenticationScheme===S.POP)){const s=new le(n,o),a=new Ue(s);let c;t.popKid?c=s.encodeKid(t.popKid):c=(await g(a.generateCnf.bind(a),h.PopTokenGenerateCnf,n,o,t.correlationId)(t,n)).reqCnfString,eo(i,c)}return Ft(i,t.correlationId,o),i}async function Po(r,e,t,n,o){if(!t.codeChallenge)throw b(Hn);const i=await g(bo,h.GetStandardParams,n,o,t.correlationId)(r,e,t,n,o);return jn(i,Sn.CODE),di(i,t.codeChallenge,m.S256_CODE_CHALLENGE_METHOD),pe(i,t.extraQueryParameters||{}),so(e,i,r.auth.encodeExtraQueryParams,t.extraQueryParameters)}async function Oo(r,e,t,n,o,i){if(!n.earJwk)throw C(ho);const s=await bo(e,t,n,o,i);jn(s,Sn.IDTOKEN_TOKEN_REFRESHTOKEN),cc(s,n.earJwk);const a=new Map;pe(a,n.extraQueryParameters||{});const c=so(t,a,e.auth.encodeExtraQueryParams,n.extraQueryParameters);return _s(r,c,s)}async function No(r,e,t,n,o,i){const s=await bo(e,t,n,o,i);jn(s,Sn.CODE),di(s,n.codeChallenge,n.codeChallengeMethod||m.S256_CODE_CHALLENGE_METHOD),lc(s,n.authorizePostBodyParameters||{});const a=new Map;pe(a,n.extraQueryParameters||{});const c=so(t,a,e.auth.encodeExtraQueryParams,n.extraQueryParameters);return _s(r,c,s)}function _s(r,e,t){const n=r.createElement("form");return n.method="post",n.action=e,t.forEach((o,i)=>{const s=r.createElement("input");s.hidden=!0,s.name=i,s.value=o,n.appendChild(s)}),r.body.appendChild(n),n}async function Rs(r,e,t,n,o,i,s,a,c,l){if(a.verbose("Account id found, calling WAM for token"),!l)throw C(po);const d=new le(a,c),u=new ft(n,o,d,a,s,n.system.navigationClient,t,c,l,e,i,r.correlationId),{userRequestState:f}=He.parseRequestState(d,r.state);return g(u.acquireToken.bind(u),h.NativeInteractionClientAcquireToken,a,c,r.correlationId)({...r,state:f,prompt:void 0})}async function Ut(r,e,t,n,o,i,s,a,c,l,d,u){if(oe.removeThrottle(s,o.auth.clientId,r),e.accountId)return g(Rs,h.HandleResponsePlatformBroker,l,d,r.correlationId)(r,e.accountId,n,o,s,a,c,l,d,u);const f={...r,code:e.code||"",codeVerifier:t},T=new ks(i,s,f,l,d);return await g(T.handleCodeResponse.bind(T),h.HandleCodeResponse,l,d,r.correlationId)(e,r)}async function Mo(r,e,t,n,o,i,s,a,c,l,d){if(oe.removeThrottle(i,n.auth.clientId,r),Ri(e,r.state),!e.ear_jwe)throw C(Ni);if(!r.earJwk)throw C(ho);const u=JSON.parse(await g(cl,h.DecryptEarResponse,c,l,r.correlationId)(r.earJwk,e.ear_jwe));if(u.accountId)return g(Rs,h.HandleResponsePlatformBroker,c,l,r.correlationId)(r,u.accountId,t,n,i,s,a,c,l,d);const f=new Ee(n.auth.clientId,i,new le(c,l),c,null,null,l);f.validateTokenResponse(u);const T={code:"",state:r.state,nonce:r.nonce,client_info:u.client_info,cloud_graph_host_name:u.cloud_graph_host_name,cloud_instance_host_name:u.cloud_instance_host_name,cloud_instance_name:u.cloud_instance_name,msgraph_host:u.msgraph_host};return await g(f.handleServerTokenResponse.bind(f),h.HandleServerTokenResponse,c,l,r.correlationId)(u,o,q(),r,T,void 0,void 0,void 0,void 0)}/*! @azure/msal-browser v4.25.1 2025-10-17 */const th=32;async function Xt(r,e,t){r.addQueueMeasurement(h.GeneratePkceCodes,t);const n=Q(nh,h.GenerateCodeVerifier,e,r,t)(r,e,t),o=await g(oh,h.GenerateCodeChallengeFromVerifier,e,r,t)(n,r,e,t);return{verifier:n,challenge:o}}function nh(r,e,t){try{const n=new Uint8Array(th);return Q(ol,h.GetRandomValues,e,r,t)(n),ye(n)}catch{throw C(lo)}}async function oh(r,e,t,n){e.addQueueMeasurement(h.GenerateCodeChallengeFromVerifier,n);try{const o=await g(ds,h.Sha256Digest,t,e,n)(r,e,n);return ye(new Uint8Array(o))}catch{throw C(lo)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Dt{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(h.NativeMessageHandlerHandshake),this.platformAuthType=W.PLATFORM_EXTENSION_PROVIDER}async sendMessage(e){this.logger.trace(this.platformAuthType+" - sendMessage called.");const t={method:Ge.GetToken,request:e},n={channel:W.CHANNEL_ID,extensionId:this.extensionId,responseId:te(),body:t};this.logger.trace(this.platformAuthType+" - Sending request to browser extension"),this.logger.tracePii(this.platformAuthType+` - Sending request to browser extension: ${JSON.stringify(n)}`),this.messageChannel.port1.postMessage(n);const o=await new Promise((s,a)=>{this.resolvers.set(n.responseId,{resolve:s,reject:a})});return this.validatePlatformBrokerResponse(o)}static async createProvider(e,t,n){e.trace("PlatformAuthExtensionHandler - createProvider called.");try{const o=new Dt(e,t,n,W.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const i=new Dt(e,t,n);return await i.sendHandshakeRequest(),i}}async sendHandshakeRequest(){this.logger.trace(this.platformAuthType+" - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:W.CHANNEL_ID,extensionId:this.extensionId,responseId:te(),body:{method:Ge.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(C(es)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace(this.platformAuthType+" - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==W.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===Ge.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(this.platformAuthType+`.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(C(ts))}}onChannelMessage(e){this.logger.trace(this.platformAuthType+" - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const i=t.body.method;if(i===Ge.Response){if(!n)return;const s=t.body.response;if(this.logger.trace(this.platformAuthType+" - Received response from browser extension"),this.logger.tracePii(this.platformAuthType+` - Received response from browser extension: ${JSON.stringify(s)}`),s.status!=="Success")n.reject(xt(s.code,s.description,s.ext));else if(s.result)s.result.code&&s.result.description?n.reject(xt(s.result.code,s.result.description,s.result.ext)):n.resolve(s.result);else throw hn(Tt,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(i===Ge.HandshakeResponse){if(!o){this.logger.trace(this.platformAuthType+`.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(this.platformAuthType+` - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(i){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${i}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(i):o&&o.reject(i)}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw hn(Tt,"Response missing expected properties.")}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}getExtensionName(){return this.getExtensionId()===W.PREFERRED_EXTENSION_ID?"chrome":this.getExtensionId()?.length?"unknown":void 0}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class xo{constructor(e,t,n){this.logger=e,this.performanceClient=t,this.correlationId=n,this.platformAuthType=W.PLATFORM_DOM_PROVIDER}static async createProvider(e,t,n){if(e.trace("PlatformAuthDOMHandler: createProvider called"),window.navigator?.platformAuthentication&&(await window.navigator.platformAuthentication.getSupportedContracts(W.MICROSOFT_ENTRA_BROKERID))?.includes(W.PLATFORM_DOM_APIS))return e.trace("Platform auth api available in DOM"),new xo(e,t,n)}getExtensionId(){return W.MICROSOFT_ENTRA_BROKERID}getExtensionVersion(){return""}getExtensionName(){return W.DOM_API_NAME}async sendMessage(e){this.logger.trace(this.platformAuthType+" - Sending request to browser DOM API");try{const t=this.initializePlatformDOMRequest(e),n=await window.navigator.platformAuthentication.executeGetToken(t);return this.validatePlatformBrokerResponse(n)}catch(t){throw this.logger.error(this.platformAuthType+" - executeGetToken DOM API error"),t}}initializePlatformDOMRequest(e){this.logger.trace(this.platformAuthType+" - initializeNativeDOMRequest called");const{accountId:t,clientId:n,authority:o,scope:i,redirectUri:s,correlationId:a,state:c,storeInCache:l,embeddedClientId:d,extraParameters:u,...f}=e,T=this.getDOMExtraParams(f);return{accountId:t,brokerId:this.getExtensionId(),authority:o,clientId:n,correlationId:a||this.correlationId,extraParameters:{...u,...T},isSecurityTokenService:!1,redirectUri:s,scope:i,state:c,storeInCache:l,embeddedClientId:d}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("isSuccess")){if(e.hasOwnProperty("accessToken")&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("clientInfo")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scopes")&&e.hasOwnProperty("expiresIn"))return this.logger.trace(this.platformAuthType+" - platform broker returned successful and valid response"),this.convertToPlatformBrokerResponse(e);if(e.hasOwnProperty("error")){const t=e;if(t.isSuccess===!1&&t.error&&t.error.code)throw this.logger.trace(this.platformAuthType+" - platform broker returned error response"),xt(t.error.code,t.error.description,{error:parseInt(t.error.errorCode),protocol_error:t.error.protocolError,status:t.error.status,properties:t.error.properties})}}throw hn(Tt,"Response missing expected properties.")}convertToPlatformBrokerResponse(e){return this.logger.trace(this.platformAuthType+" - convertToNativeResponse called"),{access_token:e.accessToken,id_token:e.idToken,client_info:e.clientInfo,account:e.account,expires_in:e.expiresIn,scope:e.scopes,state:e.state||"",properties:e.properties||{},extendedLifetimeToken:e.extendedLifetimeToken??!1,shr:e.proofOfPossessionPayload}}getDOMExtraParams(e){return{...Object.entries(e).reduce((o,[i,s])=>(o[i]=String(s),o),{})}}}/*! @azure/msal-browser v4.25.1 2025-10-17 */async function rh(r,e,t,n){r.trace("getPlatformAuthProvider called",t);const o=ih();r.trace("Has client allowed platform auth via DOM API: "+o);let i;try{o&&(i=await xo.createProvider(r,e,t)),i||(r.trace("Platform auth via DOM API not available, checking for extension"),i=await Dt.createProvider(r,n||As,e))}catch(s){r.trace("Platform auth not available",s)}return i}function ih(){let r;try{return r=window[x.SessionStorage],r?.getItem(kl)==="true"}catch{return!1}}function ot(r,e,t,n){if(e.trace("isPlatformAuthAllowed called"),!r.system.allowPlatformBroker)return e.trace("isPlatformAuthAllowed: allowPlatformBroker is not enabled, returning false"),!1;if(!t)return e.trace("isPlatformAuthAllowed: Platform auth provider is not initialized, returning false"),!1;if(n)switch(n){case S.BEARER:case S.POP:return e.trace("isPlatformAuthAllowed: authenticationScheme is supported, returning true"),!0;default:return e.trace("isPlatformAuthAllowed: authenticationScheme is not supported, returning false"),!1}return!0}/*! @azure/msal-browser v4.25.1 2025-10-17 */class sh extends Ke{constructor(e,t,n,o,i,s,a,c,l,d){super(e,t,n,o,i,s,a,l,d),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c,this.eventHandler=i}acquireToken(e,t){let n;try{if(n={popupName:this.generatePopupName(e.scopes||De,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window},this.performanceClient.addFields({isAsyncPopup:this.config.system.asyncPopups},this.correlationId),this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,n,t);{const i={...e,httpMethod:Es(e,this.config.auth.protocolMode)};return this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),n.popup=this.openSizedPopup("about:blank",n),this.acquireTokenPopupAsync(i,n,t)}}catch(o){return Promise.reject(o)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},o=e&&e.authority,i=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,o,i)):(this.logger.verbose("asyncPopup set to false, opening popup"),n.popup=this.openSizedPopup("about:blank",n),this.logoutPopupAsync(t,n,o,i))}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t,n){this.logger.verbose("acquireTokenPopupAsync called");const o=await g(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,I.Popup);t.popup&&Ts(o.authority);const i=ot(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);return o.platformBroker=i,this.config.auth.protocolMode===z.EAR?this.executeEarFlow(o,t):this.executeCodeFlow(o,t,n)}async executeCodeFlow(e,t,n){const o=e.correlationId,i=this.initializeServerTelemetryManager(_.acquireTokenPopup),s=n||await g(Xt,h.GeneratePkceCodes,this.logger,this.performanceClient,o)(this.performanceClient,this.logger,o),a={...e,codeChallenge:s.challenge};try{const c=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,o)({serverTelemetryManager:i,requestAuthority:a.authority,requestAzureCloudOptions:a.azureCloudOptions,requestExtraQueryParameters:a.extraQueryParameters,account:a.account});if(a.httpMethod===Ae.POST)return await this.executeCodeFlowWithPost(a,t,c,s.verifier);{const l=await g(Po,h.GetAuthCodeUrl,this.logger,this.performanceClient,o)(this.config,c.authority,a,this.logger,this.performanceClient),d=this.initiateAuthRequest(l,t);this.eventHandler.emitEvent(A.POPUP_OPENED,I.Popup,{popupWindow:d},null);const u=await this.monitorPopupForHash(d,t.popupWindowParent),f=Q(Je,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(u,this.config.auth.OIDCOptions.serverResponseType,this.logger);return await g(Ut,h.HandleResponseCode,this.logger,this.performanceClient,o)(e,f,s.verifier,_.acquireTokenPopup,this.config,c,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}catch(c){throw t.popup?.close(),c instanceof R&&(c.setCorrelationId(this.correlationId),i.cacheFailedRequest(c)),c}}async executeEarFlow(e,t){const n=e.correlationId,o=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,n)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),i=await g(Ao,h.GenerateEarKey,this.logger,this.performanceClient,n)(),s={...e,earJwk:i},a=t.popup||this.openPopup("about:blank",t);(await Oo(a.document,this.config,o,s,this.logger,this.performanceClient)).submit();const l=await g(this.monitorPopupForHash.bind(this),h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(a,t.popupWindowParent),d=Q(Je,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,this.config.auth.OIDCOptions.serverResponseType,this.logger);return g(Mo,h.HandleResponseEar,this.logger,this.performanceClient,n)(s,d,_.acquireTokenPopup,this.config,o,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async executeCodeFlowWithPost(e,t,n,o){const i=e.correlationId,s=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,i)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),a=t.popup||this.openPopup("about:blank",t);(await No(a.document,this.config,s,e,this.logger,this.performanceClient)).submit();const l=await g(this.monitorPopupForHash.bind(this),h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,i)(a,t.popupWindowParent),d=Q(Je,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,this.config.auth.OIDCOptions.serverResponseType,this.logger);return g(Ut,h.HandleResponseCode,this.logger,this.performanceClient,i)(e,d,o,_.acquireTokenPopup,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async logoutPopupAsync(e,t,n,o){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(A.LOGOUT_START,I.Popup,e);const i=this.initializeServerTelemetryManager(_.logoutPopup);try{await this.clearCacheOnLogout(this.correlationId,e.account);const s=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:i,requestAuthority:n,account:e.account||void 0});try{s.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&s.authority.protocolMode===z.OIDC){if(this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,I.Popup,e),o){const l={apiId:_.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},d=v.getAbsoluteUrl(o,ce());await this.navigationClient.navigateInternal(d,l)}t.popup?.close();return}}const a=s.getLogoutUri(e);this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,I.Popup,e);const c=this.openPopup(a,t);if(this.eventHandler.emitEvent(A.POPUP_OPENED,I.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,t.popupWindowParent).catch(()=>{}),o){const l={apiId:_.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},d=v.getAbsoluteUrl(o,ce());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${d}`),await this.navigationClient.navigateInternal(d,l)}else this.logger.verbose("No main window navigation requested")}catch(s){throw t.popup?.close(),s instanceof R&&(s.setCorrelationId(this.correlationId),i.cacheFailedRequest(s)),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,I.Popup,null,s),this.eventHandler.emitEvent(A.LOGOUT_END,I.Popup),s}this.eventHandler.emitEvent(A.LOGOUT_END,I.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),C(Vt)}monitorPopupForHash(e,t){return new Promise((n,o)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const i=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(i),o(C(tt));return}let s="";try{s=e.location.href}catch{}if(!s||s==="about:blank")return;clearInterval(i);let a="";const c=this.config.auth.OIDCOptions.serverResponseType;e&&(c===Lt.QUERY?a=e.location.search:a=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),n(a)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t)),!n)throw C(Fi);return n.focus&&n.focus(),this.currentWindow=n,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),C(Hi)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:n,popupWindowParent:o}){const i=o.screenLeft?o.screenLeft:o.screenX,s=o.screenTop?o.screenTop:o.screenY,a=o.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,c=o.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let l=n.popupSize?.width,d=n.popupSize?.height,u=n.popupPosition?.top,f=n.popupPosition?.left;return(!l||l<0||l>a)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),l=G.POPUP_WIDTH),(!d||d<0||d>c)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),d=G.POPUP_HEIGHT),(!u||u<0||u>c)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),u=Math.max(0,c/2-G.POPUP_HEIGHT/2+s)),(!f||f<0||f>a)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),f=Math.max(0,a/2-G.POPUP_WIDTH/2+i)),o.open(e,t,`width=${l}, height=${d}, top=${u}, left=${f}, scrollbars=yes`)}unloadWindow(e){this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow)}generatePopupName(e,t){return`${G.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${G.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v4.25.1 2025-10-17 */function ah(){if(typeof window>"u"||typeof window.performance>"u"||typeof window.performance.getEntriesByType!="function")return;const r=window.performance.getEntriesByType("navigation");return(r.length?r[0]:void 0)?.type}class ch extends Ke{constructor(e,t,n,o,i,s,a,c,l,d){super(e,t,n,o,i,s,a,l,d),this.nativeStorage=c}async acquireToken(e){const t=await g(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,I.Redirect);t.platformBroker=ot(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);const n=i=>{i.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.resetRequestCache(),this.eventHandler.emitEvent(A.RESTORE_FROM_BFCACHE,I.Redirect))},o=this.getRedirectStartPage(e.redirectStartPage);this.logger.verbosePii(`Redirect start page: ${o}`),this.browserStorage.setTemporaryCache(N.ORIGIN_URI,o,!0),window.addEventListener("pageshow",n);try{this.config.auth.protocolMode===z.EAR?await this.executeEarFlow(t):await this.executeCodeFlow(t,e.onRedirectNavigate)}catch(i){throw i instanceof R&&i.setCorrelationId(this.correlationId),window.removeEventListener("pageshow",n),i}}async executeCodeFlow(e,t){const n=e.correlationId,o=this.initializeServerTelemetryManager(_.acquireTokenRedirect),i=await g(Xt,h.GeneratePkceCodes,this.logger,this.performanceClient,n)(this.performanceClient,this.logger,n),s={...e,codeChallenge:i.challenge};this.browserStorage.cacheAuthorizeRequest(s,i.verifier);try{if(s.httpMethod===Ae.POST)return await this.executeCodeFlowWithPost(s);{const a=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:s.authority,requestAzureCloudOptions:s.azureCloudOptions,requestExtraQueryParameters:s.extraQueryParameters,account:s.account}),c=await g(Po,h.GetAuthCodeUrl,this.logger,this.performanceClient,e.correlationId)(this.config,a.authority,s,this.logger,this.performanceClient);return await this.initiateAuthRequest(c,t)}}catch(a){throw a instanceof R&&(a.setCorrelationId(this.correlationId),o.cacheFailedRequest(a)),a}}async executeEarFlow(e){const t=e.correlationId,n=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),o=await g(Ao,h.GenerateEarKey,this.logger,this.performanceClient,t)(),i={...e,earJwk:o};return this.browserStorage.cacheAuthorizeRequest(i),(await Oo(document,this.config,n,i,this.logger,this.performanceClient)).submit(),new Promise((a,c)=>{setTimeout(()=>{c(C(Nt,"failed_to_redirect"))},this.config.system.redirectNavigationTimeout)})}async executeCodeFlowWithPost(e){const t=e.correlationId,n=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return this.browserStorage.cacheAuthorizeRequest(e),(await No(document,this.config,n,e,this.logger,this.performanceClient)).submit(),new Promise((i,s)=>{setTimeout(()=>{s(C(Nt,"failed_to_redirect"))},this.config.system.redirectNavigationTimeout)})}async handleRedirectPromise(e="",t,n,o){const i=this.initializeServerTelemetryManager(_.handleRedirectPromise);try{const[s,a]=this.getRedirectResponse(e||"");if(!s)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.resetRequestCache(),ah()!=="back_forward"?o.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const c=this.browserStorage.getTemporaryCache(N.ORIGIN_URI,!0)||m.EMPTY_STRING,l=zo(c),d=zo(window.location.href);if(l===d&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),c.indexOf("#")>-1&&hl(c),await this.handleResponse(s,t,n,i);if(this.config.auth.navigateToLoginRequestUrl){if(!ko()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(N.URL_HASH,a,!0);const u={apiId:_.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let f=!0;if(!c||c==="null"){const T=ul();this.browserStorage.setTemporaryCache(N.ORIGIN_URI,T,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),f=await this.navigationClient.navigateInternal(T,u)}else this.logger.verbose(`Navigating to loginRequestUrl: ${c}`),f=await this.navigationClient.navigateInternal(c,u);if(!f)return await this.handleResponse(s,t,n,i)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(s,t,n,i);return null}catch(s){throw s instanceof R&&(s.setCorrelationId(this.correlationId),i.cacheFailedRequest(s)),s}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===Lt.QUERY?t=window.location.search:t=window.location.hash);let n=It(t);if(n){try{ql(n,this.browserCrypto,I.Redirect)}catch(i){return i instanceof R&&this.logger.error(`Interaction type validation failed due to ${i.errorCode}: ${i.errorMessage}`),[null,""]}return fs(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const o=this.browserStorage.getTemporaryCache(N.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(N.URL_HASH)),o&&(n=It(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t,n,o){if(!e.state)throw C(uo);if(e.ear_jwe){const a=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t.correlationId)({requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account});return g(Mo,h.HandleResponseEar,this.logger,this.performanceClient,t.correlationId)(t,e,_.acquireTokenRedirect,this.config,a,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}const s=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:o,requestAuthority:t.authority});return g(Ut,h.HandleResponseCode,this.logger,this.performanceClient,t.correlationId)(t,e,n,_.acquireTokenRedirect,this.config,s,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:_.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},o=t||this.config.auth.onRedirectNavigate;if(typeof o=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),o(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await this.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await this.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),C(Vt)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(_.logout);try{this.eventHandler.emitEvent(A.LOGOUT_START,I.Redirect,e),await this.clearCacheOnLogout(this.correlationId,t.account);const o={apiId:_.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===z.OIDC)try{i.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId){this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,I.Redirect,t);return}}const s=i.getLogoutUri(t);if(this.eventHandler.emitEvent(A.LOGOUT_SUCCESS,I.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(s)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,de.SIGNOUT),await this.navigationClient.navigateExternal(s,o);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,de.SIGNOUT),await this.navigationClient.navigateExternal(s,o);return}}catch(o){throw o instanceof R&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.eventHandler.emitEvent(A.LOGOUT_FAILURE,I.Redirect,null,o),this.eventHandler.emitEvent(A.LOGOUT_END,I.Redirect),o}this.eventHandler.emitEvent(A.LOGOUT_END,I.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return v.getAbsoluteUrl(t,ce())}}/*! @azure/msal-browser v4.25.1 2025-10-17 */async function lh(r,e,t,n,o){if(e.addQueueMeasurement(h.SilentHandlerInitiateAuthRequest,n),!r)throw t.info("Navigate url is empty"),C(Vt);return o?g(uh,h.SilentHandlerLoadFrame,t,e,n)(r,o,e,n):Q(gh,h.SilentHandlerLoadFrameSync,t,e,n)(r)}async function hh(r,e,t,n,o){const i=Zt();if(!i.contentDocument)throw"No document associated with iframe!";return(await No(i.contentDocument,r,e,t,n,o)).submit(),i}async function dh(r,e,t,n,o){const i=Zt();if(!i.contentDocument)throw"No document associated with iframe!";return(await Oo(i.contentDocument,r,e,t,n,o)).submit(),i}async function Tr(r,e,t,n,o,i,s){return n.addQueueMeasurement(h.SilentHandlerMonitorIframeForHash,i),new Promise((a,c)=>{e<In&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${In}ms). This may result in timeouts.`);const l=window.setTimeout(()=>{window.clearInterval(d),c(C(Ki))},e),d=window.setInterval(()=>{let u="";const f=r.contentWindow;try{u=f?f.location.href:""}catch{}if(!u||u==="about:blank")return;let T="";f&&(s===Lt.QUERY?T=f.location.search:T=f.location.hash),window.clearTimeout(l),window.clearInterval(d),a(T)},t)}).finally(()=>{Q(mh,h.RemoveHiddenIframe,o,n,i)(r)})}function uh(r,e,t,n){return t.addQueueMeasurement(h.SilentHandlerLoadFrame,n),new Promise((o,i)=>{const s=Zt();window.setTimeout(()=>{if(!s){i("Unable to load iframe");return}s.src=r,o(s)},e)})}function gh(r){const e=Zt();return e.src=r,e}function Zt(){const r=document.createElement("iframe");return r.className="msalSilentIframe",r.style.visibility="hidden",r.style.position="absolute",r.style.width=r.style.height="0",r.style.border="0",r.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(r),r}function mh(r){document.body===r.parentNode&&document.body.removeChild(r)}/*! @azure/msal-browser v4.25.1 2025-10-17 */class ph extends Ke{constructor(e,t,n,o,i,s,a,c,l,d,u){super(e,t,n,o,i,s,c,d,u),this.apiId=a,this.nativeStorage=l}async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==H.NONE&&t.prompt!==H.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${H.NONE}`),t.prompt=H.NONE):t.prompt=H.NONE;const n=await g(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,I.Silent);return n.platformBroker=ot(this.config,this.logger,this.platformAuthProvider,n.authenticationScheme),Ts(n.authority),this.config.auth.protocolMode===z.EAR?this.executeEarFlow(n):this.executeCodeFlow(n)}async executeCodeFlow(e){let t;const n=this.initializeServerTelemetryManager(this.apiId);try{return t=await g(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),await g(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(t,e)}catch(o){if(o instanceof R&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),!t||!(o instanceof R)||o.errorCode!==G.INVALID_GRANT_ERROR)throw o;return this.performanceClient.addFields({retryError:o.errorCode},this.correlationId),await g(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(t,e)}}async executeEarFlow(e){const t=e.correlationId,n=await g(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),o=await g(Ao,h.GenerateEarKey,this.logger,this.performanceClient,t)(),i={...e,earJwk:o},s=await g(dh,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,t)(this.config,n,i,this.logger,this.performanceClient),a=this.config.auth.OIDCOptions.serverResponseType,c=await g(Tr,h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,t)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,t,a),l=Q(Je,h.DeserializeResponse,this.logger,this.performanceClient,t)(c,a,this.logger);return g(Mo,h.HandleResponseEar,this.logger,this.performanceClient,t)(i,l,this.apiId,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}logout(){return Promise.reject(C(Qt))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(h.SilentIframeClientTokenHelper,n);const o=await g(Xt,h.GeneratePkceCodes,this.logger,this.performanceClient,n)(this.performanceClient,this.logger,n),i={...t,codeChallenge:o.challenge};let s;if(t.httpMethod===Ae.POST)s=await g(hh,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(this.config,e.authority,i,this.logger,this.performanceClient);else{const d=await g(Po,h.GetAuthCodeUrl,this.logger,this.performanceClient,n)(this.config,e.authority,i,this.logger,this.performanceClient);s=await g(lh,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(d,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait)}const a=this.config.auth.OIDCOptions.serverResponseType,c=await g(Tr,h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,a),l=Q(Je,h.DeserializeResponse,this.logger,this.performanceClient,n)(c,a,this.logger);return g(Ut,h.HandleResponseCode,this.logger,this.performanceClient,n)(t,l,o.verifier,this.apiId,this.config,e,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class fh extends Ke{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentRefreshClientAcquireToken,e.correlationId);const t=await g(Ro,h.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const o=this.initializeServerTelemetryManager(_.acquireTokenSilent_silentFlow),i=await this.createRefreshTokenClient({serverTelemetryManager:o,authorityUrl:n.authority,azureCloudOptions:n.azureCloudOptions,account:n.account});return g(i.acquireTokenByRefreshToken.bind(i),h.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(s=>{throw s.setCorrelationId(this.correlationId),o.cacheFailedRequest(s),s})}logout(){return Promise.reject(C(Qt))}async createRefreshTokenClient(e){const t=await g(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new Oc(t,this.performanceClient)}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Ch{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}async loadExternalTokens(e,t,n){if(!this.isBrowserEnvironment)throw C(Wt);const o=e.correlationId||te(),i=t.id_token?Le(t.id_token,X):void 0,s={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},a=e.authority?new F(F.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,s,this.logger,e.correlationId||te()):void 0,c=await this.loadAccount(e,n.clientInfo||t.client_info||"",o,i,a),l=await this.loadIdToken(t,c.homeAccountId,c.environment,c.realm,o),d=await this.loadAccessToken(e,t,c.homeAccountId,c.environment,c.realm,n,o),u=await this.loadRefreshToken(t,c.homeAccountId,c.environment,o);return this.generateAuthenticationResult(e,{account:c,idToken:l,accessToken:d,refreshToken:u},i,a)}async loadAccount(e,t,n,o,i){if(this.logger.verbose("TokenCache - loading account"),e.account){const l=Z.createFromAccountInfo(e.account);return await this.storage.setAccount(l,n),l}else if(!i||!t&&!o)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),C(Wi);const s=Z.generateHomeAccountId(t,i.authorityType,this.logger,this.cryptoObj,o),a=o?.tid,c=io(this.storage,i,s,X,n,o,t,i.hostnameAndPort,a,void 0,void 0,this.logger);return await this.storage.setAccount(c,n),c}async loadIdToken(e,t,n,o,i){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const s=Gt(t,n,e.id_token,this.config.auth.clientId,o);return await this.storage.setIdTokenCredential(s,i),s}async loadAccessToken(e,t,n,o,i,s,a){if(t.access_token)if(t.expires_in){if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null}else return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;else return this.logger.verbose("TokenCache - no access token found in response"),null;this.logger.verbose("TokenCache - loading access token");const c=t.scope?M.fromString(t.scope):new M(e.scopes),l=s.expiresOn||t.expires_in+q(),d=s.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+q(),u=zt(n,o,t.access_token,this.config.auth.clientId,i,c.printScopes(),l,d,X);return await this.storage.setAccessTokenCredential(u,a),u}async loadRefreshToken(e,t,n,o){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const i=Ai(t,n,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return await this.storage.setRefreshTokenCredential(i,o),i}generateAuthenticationResult(e,t,n,o){let i="",s=[],a=null,c;t?.accessToken&&(i=t.accessToken.secret,s=M.fromString(t.accessToken.target).asArray(),a=Me(t.accessToken.expiresOn),c=Me(t.accessToken.extendedExpiresOn));const l=t.account;return{authority:o?o.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:s,account:l.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:n||{},accessToken:i,fromCache:!0,expiresOn:a,correlationId:e.correlationId||"",requestId:"",extExpiresOn:c,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:l.cloudGraphHostName||"",msGraphHost:l.msGraphHost||"",fromNativeBroker:!1}}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class yh extends _i{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Th extends Ke{constructor(e,t,n,o,i,s,a,c,l,d){super(e,t,n,o,i,s,c,l,d),this.apiId=a}async acquireToken(e){if(!e.code)throw C(Yi);const t=await g(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,I.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},i=await g(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new yh(i);this.logger.verbose("Auth code client created");const a=new ks(s,this.browserStorage,o,this.logger,this.performanceClient);return await g(a.handleCodeResponseFromServer.bind(a),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof R&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(C(Qt))}}/*! @azure/msal-browser v4.25.1 2025-10-17 */function Ah(r,e,t){const n=window.msal?.clientIds||[],o=n.length,i=n.filter(s=>s===r).length;i>1&&t.warning("There is already an instance of MSAL.js in the window with the same client id."),e.add({msalInstanceCount:o,sameClientIdInstanceCount:i})}/*! @azure/msal-browser v4.25.1 2025-10-17 */function gt(r,e,t){try{vo(r)}catch(n){throw e.end({success:!1},n,t),n}}class en{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new le(this.logger,this.performanceClient):At,this.eventHandler=new Bl(this.logger),this.browserStorage=this.isBrowserEnvironment?new vn(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,wc(this.config.auth)):Nl(this.config.auth.clientId,this.logger,this.performanceClient,this.eventHandler);const t={cacheLocation:x.MemoryStorage,cacheRetentionDays:5,temporaryCacheLocation:x.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new vn(this.config.auth.clientId,t,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler),this.tokenCache=new Ch(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){const n=new en(e);return await n.initialize(t),n}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e,t){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END);return}const n=e?.correlationId||this.getRequestCorrelationId(),o=this.config.system.allowPlatformBroker,i=this.performanceClient.startMeasurement(h.InitializeClientApplication,n);if(this.eventHandler.emitEvent(A.INITIALIZE_START),!t)try{this.logMultipleInstances(i)}catch{}if(await g(this.browserStorage.initialize.bind(this.browserStorage),h.InitializeCache,this.logger,this.performanceClient,n)(n),o)try{this.platformAuthProvider=await rh(this.logger,this.performanceClient,n,this.config.system.nativeBrokerHandshakeTimeout)}catch(s){this.logger.verbose(s)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),Q(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),h.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,n)(n)),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(n),this.initialized=!0,this.eventHandler.emitEvent(A.INITIALIZE_END),i.end({allowPlatformBroker:o,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),ys(this.initialized),this.isBrowserEnvironment){const t=e||"";let n=this.redirectResponse.get(t);return typeof n>"u"?(n=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,n),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),n}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;if(this.browserStorage.getInteractionInProgress()?.type===de.SIGNOUT)return this.logger.verbose("handleRedirectPromise removing interaction_in_progress flag and returning null after sign-out"),this.browserStorage.setInteractionInProgress(!1),Promise.resolve(null);const n=this.getAllAccounts(),o=this.browserStorage.getCachedNativeRequest(),i=o&&this.platformAuthProvider&&!e;let s;this.eventHandler.emitEvent(A.HANDLE_REDIRECT_START,I.Redirect);let a;try{if(i&&this.platformAuthProvider){s=this.performanceClient.startMeasurement(h.AcquireTokenRedirect,o?.correlationId||""),this.logger.trace("handleRedirectPromise - acquiring token from native platform"),s.add({isPlatformBrokerRequest:!0});const c=new ft(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,_.handleRedirectPromise,this.performanceClient,this.platformAuthProvider,o.accountId,this.nativeInternalStorage,o.correlationId);a=g(c.handleRedirectPromise.bind(c),h.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(this.performanceClient,s.event.correlationId)}else{const[c,l]=this.browserStorage.getCachedRequest(),d=c.correlationId;s=this.performanceClient.startMeasurement(h.AcquireTokenRedirect,d),this.logger.trace("handleRedirectPromise - acquiring token from web flow");const u=this.createRedirectClient(d);a=g(u.handleRedirectPromise.bind(u),h.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(e,c,l,s)}}catch(c){throw this.browserStorage.resetRequestCache(),c}return a.then(c=>(c?(this.browserStorage.resetRequestCache(),n.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(A.LOGIN_SUCCESS,I.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,I.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),s.end({success:!0},void 0,c.account)):s.event.errorCode?s.end({success:!1},void 0):s.discard(),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,I.Redirect),c)).catch(c=>{this.browserStorage.resetRequestCache();const l=c;throw n.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,I.Redirect,null,l):this.eventHandler.emitEvent(A.LOGIN_FAILURE,I.Redirect,null,l),this.eventHandler.emitEvent(A.HANDLE_REDIRECT_END,I.Redirect),s.end({success:!1},l),c})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const n=this.performanceClient.startMeasurement(h.AcquireTokenPreRedirect,t);n.add({scenarioId:e.scenarioId});const o=e.onRedirectNavigate;if(o)e.onRedirectNavigate=s=>{const a=typeof o=="function"?o(s):void 0;return n.add({navigateCallbackResult:a!==!1}),n.event=n.end({success:!0},void 0,e.account)||n.event,a};else{const s=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=a=>{const c=typeof s=="function"?s(a):void 0;return n.add({navigateCallbackResult:c!==!1}),n.event=n.end({success:!0},void 0,e.account)||n.event,c}}const i=this.getAllAccounts().length>0;try{lr(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,de.SIGNIN),i?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,I.Redirect,e):this.eventHandler.emitEvent(A.LOGIN_START,I.Redirect,e);let s;return this.platformAuthProvider&&this.canUsePlatformBroker(e)?s=new ft(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,_.acquireTokenRedirect,this.performanceClient,this.platformAuthProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,n).catch(c=>{if(n.add({brokerErrorName:c.name,brokerErrorCode:c.errorCode}),c instanceof re&&Pe(c))return this.platformAuthProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(c instanceof ee)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw c}):s=this.createRedirectClient(t).acquireToken(e),await s}catch(s){throw this.browserStorage.resetRequestCache(),n.event.status===2?this.performanceClient.startMeasurement(h.AcquireTokenRedirect,t).end({success:!1},s,e.account):n.end({success:!1},s,e.account),i?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,I.Redirect,null,s):this.eventHandler.emitEvent(A.LOGIN_FAILURE,I.Redirect,null,s),s}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenPopup,t);n.add({scenarioId:e.scenarioId});try{this.logger.verbose("acquireTokenPopup called",t),gt(this.initialized,n,e.account),this.browserStorage.setInteractionInProgress(!0,de.SIGNIN)}catch(a){return Promise.reject(a)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,I.Popup,e):this.eventHandler.emitEvent(A.LOGIN_START,I.Popup,e);let i;const s=this.getPreGeneratedPkceCodes(t);return this.canUsePlatformBroker(e)?(n.add({isPlatformBrokerRequest:!0}),i=this.acquireTokenNative({...e,correlationId:t},_.acquireTokenPopup).then(a=>(n.end({success:!0},void 0,a.account),a)).catch(a=>{if(n.add({brokerErrorName:a.name,brokerErrorCode:a.errorCode}),a instanceof re&&Pe(a))return this.platformAuthProvider=void 0,this.createPopupClient(t).acquireToken(e,s);if(a instanceof ee)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e,s);throw a})):i=this.createPopupClient(t).acquireToken(e,s),i.then(a=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(A.LOGIN_SUCCESS,I.Popup,a):this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,I.Popup,a),n.end({success:!0,accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length},void 0,a.account),a)).catch(a=>(o.length>0?this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,I.Popup,null,a):this.eventHandler.emitEvent(A.LOGIN_FAILURE,I.Popup,null,a),n.end({success:!1},a,e.account),Promise.reject(a))).finally(async()=>{this.browserStorage.setInteractionInProgress(!1),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(t)})}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.ssoSilentMeasurement=this.performanceClient.startMeasurement(h.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId}),gt(this.initialized,this.ssoSilentMeasurement,e.account),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(A.SSO_SILENT_START,I.Silent,n);let o;return this.canUsePlatformBroker(n)?(this.ssoSilentMeasurement?.add({isPlatformBrokerRequest:!0}),o=this.acquireTokenNative(n,_.ssoSilent).catch(i=>{if(this.ssoSilentMeasurement?.add({brokerErrorName:i.name,brokerErrorCode:i.errorCode}),i instanceof re&&Pe(i))return this.platformAuthProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw i})):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(i=>(this.eventHandler.emitEvent(A.SSO_SILENT_SUCCESS,I.Silent,i),this.ssoSilentMeasurement?.end({success:!0,accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length},void 0,i.account),i)).catch(i=>{throw this.eventHandler.emitEvent(A.SSO_SILENT_FAILURE,I.Silent,null,i),this.ssoSilentMeasurement?.end({success:!1},i,e.account),i}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const n=this.performanceClient.startMeasurement(h.AcquireTokenByCode,t);gt(this.initialized,n),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_START,I.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw C(Xi);if(e.code){const o=e.code;let i=this.hybridAuthCodeResponses.get(o);return i?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),i=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(s=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_SUCCESS,I.Silent,s),this.hybridAuthCodeResponses.delete(o),n.end({success:!0,accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length},void 0,s.account),s)).catch(s=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,I.Silent,null,s),n.end({success:!1},s),s}),this.hybridAuthCodeResponses.set(o,i)),await i}else if(e.nativeAccountId)if(this.canUsePlatformBroker(e,e.nativeAccountId)){n.add({isPlatformBrokerRequest:!0});const o=await this.acquireTokenNative({...e,correlationId:t},_.acquireTokenByCode,e.nativeAccountId).catch(i=>{throw i instanceof re&&Pe(i)&&(this.platformAuthProvider=void 0),n.add({brokerErrorName:i.name,brokerErrorCode:i.errorCode}),i});return n.end({success:!0},void 0,o.account),o}else throw C(Zi);else throw C(Ji)}catch(o){throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_BY_CODE_FAILURE,I.Silent,null,o),n.end({success:!1},o),o}}async acquireTokenByCodeAsync(e){return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(o=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:o.fromCache}),o)).catch(o=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},o),o}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenFromCache,e.correlationId),t){case K.Default:case K.AccessToken:case K.AccessTokenAndRefreshToken:const n=this.createSilentCacheClient(e.correlationId);return g(n.acquireToken.bind(n),h.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw p(me)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenByRefreshToken,e.correlationId),t){case K.Default:case K.AccessTokenAndRefreshToken:case K.RefreshToken:case K.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return g(n.acquireToken.bind(n),h.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw p(me)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(h.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return g(t.acquireToken.bind(t),h.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return lr(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,de.SIGNOUT),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return vo(this.initialized),this.browserStorage.setInteractionInProgress(!0,de.SIGNOUT),this.createPopupClient(t).logout(e).finally(()=>{this.browserStorage.setInteractionInProgress(!1)})}catch(t){return Promise.reject(t)}}async clearCache(e){if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, returning early.");return}const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){const t=this.getRequestCorrelationId();return Ml(this.logger,this.browserStorage,this.isBrowserEnvironment,t,e)}getAccount(e){const t=this.getRequestCorrelationId();return xl(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.getRequestCorrelationId();return Ul(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.getRequestCorrelationId();return Dl(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.getRequestCorrelationId();return Ll(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.getRequestCorrelationId();Hl(e,this.browserStorage,t)}getActiveAccount(){const e=this.getRequestCorrelationId();return Fl(this.browserStorage,e)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=Z.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(n,e.correlationId),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,n,o){if(this.logger.trace("acquireTokenNative called"),!this.platformAuthProvider)throw C(po);return new ft(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.platformAuthProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e,o)}canUsePlatformBroker(e,t){if(this.logger.trace("canUsePlatformBroker called"),!this.platformAuthProvider)return this.logger.trace("canUsePlatformBroker: platform broker unavilable, returning false"),!1;if(!ot(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme))return this.logger.trace("canUsePlatformBroker: isBrokerAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case H.NONE:case H.CONSENT:case H.LOGIN:case H.SELECT_ACCOUNT:this.logger.trace("canUsePlatformBroker: prompt is compatible with platform broker flow");break;default:return this.logger.trace(`canUsePlatformBroker: prompt = ${e.prompt} is not compatible with platform broker flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUsePlatformBroker: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new sh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createRedirectClient(e){return new ch(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentIframeClient(e){return new ph(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,_.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentCacheClient(e){return new Ss(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentRefreshClient(e){return new fh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentAuthCodeClient(e){return new Th(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,_.acquireTokenByCode,this.performanceClient,this.platformAuthProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return Cs(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){if(this.config.cache.cacheLocation!==x.LocalStorage){this.logger.info("Account storage events are only available when cacheLocation is set to localStorage");return}this.eventHandler.subscribeCrossTab()}disableAccountStorageEvents(){if(this.config.cache.cacheLocation!==x.LocalStorage){this.logger.info("Account storage events are only available when cacheLocation is set to localStorage");return}this.eventHandler.unsubscribeCrossTab()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?te():m.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||rr})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||rr})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),gt(this.initialized,n,e.account),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw C(qi);return this.acquireTokenSilentDeduped(e,o,t).then(i=>(n.end({success:!0,fromCache:i.fromCache,accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length},void 0,i.account),{...i,state:e.state,correlationId:t})).catch(i=>{throw i instanceof R&&i.setCorrelationId(t),n.end({success:!1},i,o),i})}async acquireTokenSilentDeduped(e,t,n){const o=qt(this.config.auth.clientId,{...e,authority:e.authority||this.config.auth.authority},t.homeAccountId),i=JSON.stringify(o),s=this.activeSilentTokenRequests.get(i);if(typeof s>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",n),this.performanceClient.addFields({deduped:!1},n);const a=g(this.acquireTokenSilentAsync.bind(this),h.AcquireTokenSilentAsync,this.logger,this.performanceClient,n)({...e,correlationId:n},t);return this.activeSilentTokenRequests.set(i,a),a.finally(()=>{this.activeSilentTokenRequests.delete(i)})}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",n),this.performanceClient.addFields({deduped:!0},n),s}async acquireTokenSilentAsync(e,t){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(h.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_START,I.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const o=await g(Gl,h.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),i=e.cacheLookupPolicy||K.Default;return this.acquireTokenSilentNoIframe(o,i).catch(async a=>{if(Ih(a,i))if(this.activeIframeRequest)if(i!==K.Skip){const[l,d]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${d}`,o.correlationId);const u=this.performanceClient.startMeasurement(h.AwaitConcurrentIframe,o.correlationId);u.add({awaitIframeCorrelationId:d});const f=await l;if(u.end({success:f}),f)return this.logger.verbose(`Parallel iframe request with correlationId: ${d} succeeded. Retrying cache and/or RT redemption`,o.correlationId),this.acquireTokenSilentNoIframe(o,i);throw this.logger.info(`Iframe request with correlationId: ${d} failed. Interaction is required.`),a}else return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",o.correlationId),g(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o);else{let l;return this.activeIframeRequest=[new Promise(d=>{l=d}),o.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",o.correlationId),g(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o).then(d=>(l(!0),d)).catch(d=>{throw l(!1),d}).finally(()=>{this.activeIframeRequest=void 0})}else throw a}).then(a=>(this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_SUCCESS,I.Silent,a),this.performanceClient.addFields({fromCache:a.fromCache},e.correlationId),a)).catch(a=>{throw this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_FAILURE,I.Silent,null,a),a}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,t){return ot(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.performanceClient.addFields({isPlatformBrokerRequest:!0},e.correlationId),this.acquireTokenNative(e,_.acquireTokenSilent_silentFlow,e.account.nativeAccountId,t).catch(async n=>{throw this.performanceClient.addFields({brokerErrorName:n.name,brokerErrorCode:n.errorCode},e.correlationId),n instanceof re&&Pe(n)?(this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.platformAuthProvider=void 0,p(me)):n})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),t===K.AccessToken&&this.logger.verbose("acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache"),g(this.acquireTokenFromCache.bind(this),h.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(n=>{if(t===K.AccessToken)throw n;return this.eventHandler.emitEvent(A.ACQUIRE_TOKEN_NETWORK_START,I.Silent,e),g(this.acquireTokenByRefreshToken.bind(this),h.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}async preGeneratePkceCodes(e){return this.logger.verbose("Generating new PKCE codes"),this.pkceCode=await g(Xt,h.GeneratePkceCodes,this.logger,this.performanceClient,e)(this.performanceClient,this.logger,e),Promise.resolve()}getPreGeneratedPkceCodes(e){this.logger.verbose("Attempting to pick up pre-generated PKCE codes");const t=this.pkceCode?{...this.pkceCode}:void 0;return this.pkceCode=void 0,this.logger.verbose(`${t?"Found":"Did not find"} pre-generated PKCE codes`),this.performanceClient.addFields({usePreGeneratedPkce:!!t},e),t}logMultipleInstances(e){const t=this.config.auth.clientId;if(!window)return;window.msal=window.msal||{},window.msal.clientIds=window.msal.clientIds||[],window.msal.clientIds.length>0&&this.logger.verbose("There is already an instance of MSAL.js in the window."),window.msal.clientIds.push(t),Ah(t,e,this.logger)}}function Ih(r,e){const t=!(r instanceof ee&&r.subError!==$t),n=r.errorCode===G.INVALID_GRANT_ERROR||r.errorCode===me,o=t&&n||r.errorCode===bt||r.errorCode===oo,i=Yc.includes(e);return o&&i}/*! @azure/msal-browser v4.25.1 2025-10-17 */async function wh(r,e){const t=new ve(r);return await t.initialize(),en.createController(t,e)}/*! @azure/msal-browser v4.25.1 2025-10-17 */class Uo{static async createPublicClientApplication(e){const t=await wh(e);return new Uo(e,t)}constructor(e,t){this.isBroker=!1,this.controller=t||new en(new ve(e))}async initialize(e){return this.controller.initialize(e,this.isBroker)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}const ze={auth:{clientId:"15d53ab4-cfad-4757-88a2-904139d4ca9d",authority:"https://login.microsoftonline.com/consumers",redirectUri:window.location.origin},cache:{cacheLocation:"localStorage",storeAuthStateInCookie:!1}},ln=["XboxLive.signin","offline_access"].filter(Boolean);class Eh{constructor(){this.msalInstance=new Uo(ze),this.initialized=!1}async initialize(){this.initialized||(await this.msalInstance.initialize(),this.initialized=!0,console.log("✅ MSAL inicializado"))}async loginWithRedirect(e){try{return console.log("🔐 Iniciando Microsoft Login..."),await this.loginWithDeviceCodeDirect(e)}catch(t){throw console.error("❌ Error en Microsoft OAuth:",t),new Error(`Error de autenticación: ${t.message}`)}}async loginWithDeviceCodeDirect(e){try{console.log("🔐 Iniciando Device Code Flow...");const t="/microsoft-oauth/consumers/oauth2/v2.0/devicecode",n=new URLSearchParams({client_id:ze.auth.clientId,scope:ln.join(" ")});console.log("📡 Solicitando código a Microsoft...");const i=await(await fetch(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:n.toString()})).json();if(!i||i.error)throw new Error(i.error_description||"No se pudo obtener código");console.log("✅ Código obtenido:",i.user_code),console.log("🌐 URL:",i.verification_uri),e&&e({userCode:i.user_code,verificationUri:i.verification_uri,message:i.message,expiresIn:i.expires_in});const s="/microsoft-oauth/consumers/oauth2/v2.0/token",a=(i.interval||5)*1e3,c=Date.now()+i.expires_in*1e3;for(console.log("⏳ Esperando autorización del usuario...");Date.now()<c;){await new Promise(f=>setTimeout(f,a));const l=new URLSearchParams({grant_type:"urn:ietf:params:oauth:grant-type:device_code",client_id:ze.auth.clientId,device_code:i.device_code}),u=await(await fetch(s,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:l.toString()})).json();if(u.access_token)return console.log("✅ Access token obtenido"),await this.authenticateMinecraft({accessToken:u.access_token});if(u.error&&u.error!=="authorization_pending")throw new Error(u.error_description||u.error);console.log("⏳ Polling... (esperando autorización)")}throw new Error("Timeout: El código expiró sin ser autorizado")}catch(t){throw console.error("❌ Error en Device Code Flow:",t),t}}async loginWithDeviceCodeElectron(e){try{console.log("🔐 Iniciando Device Code Flow via Electron...");const t="https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode",n=new URLSearchParams({client_id:ze.auth.clientId,scope:ln.join(" ")}),i=await(await fetch(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:n.toString()})).json();if(!i||i.error)throw new Error(i.error_description||"No se pudo obtener código");const s=i;console.log("📋 Código de dispositivo:",s.user_code),e&&e({userCode:s.user_code,verificationUri:s.verification_uri,message:s.message,expiresIn:s.expires_in});const a="https://login.microsoftonline.com/consumers/oauth2/v2.0/token",c=s.interval||5,l=Date.now()+s.expires_in*1e3;for(;Date.now()<l;){await new Promise(T=>setTimeout(T,c*1e3));const d=new URLSearchParams({grant_type:"urn:ietf:params:oauth:grant-type:device_code",client_id:ze.auth.clientId,device_code:s.device_code}),f=await(await fetch(a,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:d.toString()})).json();if(f.access_token)return console.log("✅ Token obtenido"),await this.authenticateMinecraft({accessToken:f.access_token});if(f.error&&f.error!=="authorization_pending")throw new Error(f.error_description||f.error);console.log("⏳ Esperando autorización...")}throw new Error("Timeout: El código expiró")}catch(t){throw console.error("❌ Error en Device Code Flow:",t),t}}async loginWithPopup(){await this.initialize();try{console.log("🔐 Iniciando Popup Login...");const e={scopes:ln,prompt:"select_account"},t=await this.msalInstance.loginPopup(e);return console.log("✅ Autenticación Microsoft exitosa"),console.log("👤 Usuario:",t.account.username),await this.authenticateMinecraft(t)}catch(e){throw console.error("❌ Error en Microsoft OAuth:",e),new Error(`Error de autenticación: ${e.message}`)}}async authenticateMinecraft(e){try{const t=e.accessToken;console.log("🎮 Paso 1/4: Autenticando con Xbox Live...");const n=await fetch("https://user.auth.xboxlive.com/user/authenticate",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({Properties:{AuthMethod:"RPS",SiteName:"user.auth.xboxlive.com",RpsTicket:`d=${t}`},RelyingParty:"http://auth.xboxlive.com",TokenType:"JWT"})});if(!n.ok)throw new Error("Xbox Live auth failed");const o=await n.json(),i=o.Token,s=o.DisplayClaims.xui[0].uhs;console.log("✅ Xbox Live autenticado"),console.log("🎮 Paso 2/4: Obteniendo XSTS token...");const a=await fetch("https://xsts.auth.xboxlive.com/xsts/authorize",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({Properties:{SandboxId:"RETAIL",UserTokens:[i]},RelyingParty:"rp://api.minecraftservices.com/",TokenType:"JWT"})});if(!a.ok){const O=await a.json();throw O.XErr===2148916233?new Error("Esta cuenta no tiene Xbox Live. Necesitas una cuenta Microsoft con Xbox."):O.XErr===2148916238?new Error("Esta cuenta es menor de edad. Necesita permiso parental."):new Error(`XSTS auth failed: ${O.Message||"Unknown error"}`)}const l=(await a.json()).Token;console.log("✅ XSTS token obtenido"),console.log("🎮 Paso 3/4: Autenticando con Minecraft...");const d=await fetch("https://api.minecraftservices.com/authentication/login_with_xbox",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({identityToken:`XBL3.0 x=${s};${l}`})});if(!d.ok)throw new Error("Minecraft auth failed");const f=(await d.json()).access_token;console.log("✅ Minecraft token obtenido"),console.log("🎮 Paso 4/4: Obteniendo perfil de Minecraft...");const T=await fetch("https://api.minecraftservices.com/minecraft/profile",{headers:{Authorization:`Bearer ${f}`}});if(!T.ok)throw T.status===404?new Error("Esta cuenta Microsoft no tiene Minecraft. Necesitas comprar Minecraft en minecraft.net"):new Error("No se pudo obtener el perfil de Minecraft");const k=await T.json();console.log("✅ Perfil obtenido"),console.log("👤 Username:",k.name),console.log("🆔 UUID:",k.id);const w=`https://crafatar.com/skins/${k.id}`;return{username:k.name,uuid:k.id,accessToken:f,skinUrl:w,skins:k.skins||[]}}catch(t){throw console.error("❌ Error en autenticación Minecraft:",t),t}}async getActiveAccount(){await this.initialize();const e=this.msalInstance.getAllAccounts();return e.length>0?e[0]:null}async logout(){await this.initialize();const e=await this.getActiveAccount();e&&(await this.msalInstance.logoutPopup({account:e}),console.log("✅ Sesión de Microsoft cerrada"))}}const kh=new Eh,Sh=()=>{const r=bs(),{login:e}=Ps(),t=_e.useContext(Os),[n,o]=_e.useState(""),[i,s]=_e.useState(!1),[a,c]=_e.useState(""),[l,d]=_e.useState(!1),[u,f]=_e.useState(null),T=async()=>{if(!n||n.length<3){c("El nombre debe tener al menos 3 caracteres");return}s(!0),c(""),await new Promise(w=>setTimeout(w,1e3)),e({username:n,uuid:null,skinUrl:`https://minotar.net/skin/${n}`},!1),r("/home")},k=async()=>{s(!0),c("");try{const w=await kh.loginWithRedirect(O=>{f(O),d(!0),window.open(O.verificationUri,"_blank"),t&&t.info(`Código: ${O.userCode} - Abre tu navegador`,8e3)});console.log("✅ Login Microsoft completo:",w),e({username:w.username,uuid:w.uuid,skinUrl:w.skinUrl},!0),t&&t.success(`¡Bienvenido ${w.username}! 👑`),d(!1),r("/home")}catch(w){console.error("Error en Microsoft login:",w),c(w.message||"Error al iniciar sesión con Microsoft"),d(!1),t&&t.error(w.message||"Error de autenticación")}finally{s(!1)}};return y.jsxs("div",{className:"w-full h-full flex items-center justify-center p-8 relative z-10",children:[y.jsxs(Be.div,{initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},transition:{duration:.5},className:"max-w-5xl w-full",children:[y.jsx("div",{className:"mb-12 h-32"}),y.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[y.jsxs(Be.div,{initial:{x:-100,opacity:0},animate:{x:0,opacity:1},transition:{delay:.6},className:"glass rounded-2xl p-8 border-2 border-pokemon-blue/30 hover:border-pokemon-blue transition-all",children:[y.jsxs("div",{className:"text-center mb-6",children:[y.jsx("div",{className:"w-20 h-20 bg-gradient-to-br from-pokemon-blue to-pokemon-blue/50 rounded-full mx-auto mb-4 flex items-center justify-center text-5xl",children:"🎮"}),y.jsx("h2",{className:"text-white font-bold text-2xl mb-2",children:"Modo Offline"}),y.jsx("p",{className:"text-gray-400 text-sm",children:"Juega sin cuenta premium"})]}),y.jsxs("div",{className:"space-y-4",children:[y.jsx("input",{type:"text",placeholder:"Tu nombre de usuario",value:n,onChange:w=>o(w.target.value),onKeyPress:w=>w.key==="Enter"&&T(),className:"w-full px-4 py-3 bg-pokemon-darkest border-2 border-pokemon-blue/30 rounded-lg text-white placeholder-gray-500 focus:border-pokemon-blue focus:outline-none transition-colors",disabled:i}),a&&y.jsx("p",{className:"text-pokemon-red text-sm text-center",children:a}),y.jsx("button",{onClick:T,disabled:i,className:"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed",children:i?"Conectando...":"🎮 Jugar Offline"})]}),y.jsxs("div",{className:"mt-6 space-y-2 text-sm",children:[y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-blue",children:"✓"}),y.jsx("span",{children:"Acceso inmediato"})]}),y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-blue",children:"✓"}),y.jsx("span",{children:"Todos los mods disponibles"})]}),y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-blue",children:"✓"}),y.jsx("span",{children:"Servidor de PokeReport"})]})]})]}),y.jsxs(Be.div,{initial:{x:100,opacity:0},animate:{x:0,opacity:1},transition:{delay:.6},className:"glass rounded-2xl p-8 border-2 border-pokemon-yellow/30 hover:border-pokemon-yellow transition-all",children:[y.jsxs("div",{className:"text-center mb-6",children:[y.jsx("div",{className:"w-20 h-20 bg-gradient-to-br from-pokemon-yellow to-pokemon-yellow/50 rounded-full mx-auto mb-4 flex items-center justify-center text-5xl animate-glow",children:"👑"}),y.jsx("h2",{className:"text-white font-bold text-2xl mb-2",children:"Cuenta Premium"}),y.jsx("p",{className:"text-gray-400 text-sm",children:"Inicia sesión con Microsoft"})]}),y.jsx("div",{className:"space-y-4",children:y.jsx("button",{onClick:k,disabled:i,className:"w-full btn-secondary disabled:opacity-50 disabled:cursor-not-allowed",children:i?"Conectando...":"👑 Login con Microsoft"})}),y.jsxs("div",{className:"mt-6 space-y-2 text-sm",children:[y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-yellow",children:"★"}),y.jsx("span",{children:"Skin oficial sincronizado"})]}),y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-yellow",children:"★"}),y.jsx("span",{children:"Servidores oficiales"})]}),y.jsxs("div",{className:"flex items-center gap-2 text-gray-400",children:[y.jsx("span",{className:"text-pokemon-yellow",children:"★"}),y.jsx("span",{children:"Multijugador completo"})]})]}),y.jsx("div",{className:"mt-6 p-3 bg-pokemon-yellow/10 border border-pokemon-yellow/30 rounded-lg",children:y.jsx("p",{className:"text-pokemon-yellow text-xs text-center",children:"Requiere cuenta de Minecraft comprada"})})]})]}),y.jsx(Be.div,{initial:{y:50,opacity:0},animate:{y:0,opacity:1},transition:{delay:.8},className:"text-center mt-8",children:y.jsx("p",{className:"text-white font-semibold text-sm drop-shadow-lg",children:"PokeReport Launcher © 2025 | Creado con ❤️ por la comunidad"})})]}),l&&u&&y.jsx("div",{className:"fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-8",children:y.jsxs(Be.div,{initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},className:"glass rounded-3xl p-8 max-w-md w-full border-2 border-pokemon-yellow",children:[y.jsxs("div",{className:"text-center mb-6",children:[y.jsx("div",{className:"w-20 h-20 bg-gradient-to-br from-pokemon-yellow to-pokemon-red rounded-full mx-auto mb-4 flex items-center justify-center text-5xl",children:"👑"}),y.jsx("h2",{className:"text-white font-bold text-2xl mb-2",children:"Autenticación Microsoft"}),y.jsx("p",{className:"text-gray-400 text-sm",children:"Sigue estos pasos para iniciar sesión"})]}),y.jsxs("div",{className:"space-y-4",children:[y.jsxs("div",{className:"bg-pokemon-darkest rounded-xl p-4",children:[y.jsx("p",{className:"text-gray-400 text-xs mb-2",children:"1. Abre esta URL en tu navegador:"}),y.jsx("a",{href:u.verificationUri,target:"_blank",rel:"noopener noreferrer",className:"text-pokemon-blue font-bold text-sm hover:underline break-all",children:u.verificationUri})]}),y.jsxs("div",{className:"bg-pokemon-darkest rounded-xl p-4",children:[y.jsx("p",{className:"text-gray-400 text-xs mb-2",children:"2. Ingresa este código:"}),y.jsx("div",{className:"bg-pokemon-darker rounded-lg p-4 border-2 border-pokemon-yellow",children:y.jsx("p",{className:"text-pokemon-yellow font-bold text-3xl text-center tracking-widest",children:u.userCode})}),y.jsx("button",{onClick:()=>{navigator.clipboard.writeText(u.userCode),t&&t.success("Código copiado")},className:"w-full mt-2 py-2 bg-pokemon-blue/20 hover:bg-pokemon-blue/30 text-pokemon-blue font-bold rounded-lg text-sm transition-colors",children:"📋 Copiar código"})]}),y.jsx("div",{className:"bg-pokemon-yellow/10 border border-pokemon-yellow/30 rounded-xl p-4",children:y.jsxs("p",{className:"text-pokemon-yellow text-xs text-center",children:["⏰ Expira en ",Math.floor(u.expiresIn/60)," minutos"]})}),y.jsxs("div",{className:"text-center",children:[y.jsx("div",{className:"loading-spinner mx-auto mb-3"}),y.jsx("p",{className:"text-white font-semibold text-sm",children:"Esperando autorización..."}),y.jsx("p",{className:"text-gray-500 text-xs mt-1",children:"Autoriza en tu navegador para continuar"})]})]}),y.jsx("button",{onClick:()=>{d(!1),s(!1)},className:"w-full mt-6 py-3 bg-pokemon-darkest hover:bg-pokemon-darker text-white font-bold rounded-xl transition-colors",children:"Cancelar"})]})})]})};export{Sh as default};
